{"version":3,"sources":["components/hoc/AuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/image/no_avatar.png","components/Users/UsersPageButton.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","UsersPageButton","pagesCount","Math","ceil","totalCount","pagesSize","pages","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftBorder","rightBorder","className","onClick","disabled","filter","p","map","c","onPageChanged","User","user","usersData","id","photos","small","src","noAvatar","follow","followingInProgress","some","followTC","unFollowTC","name","status","Users","u","getUsers","usersPage","getPagesSize","getTotalCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","getPortionSize","UsersContainer","pageNumber","onPageChangedTC","setUsersTC","Preloader","compose","setUsers","setCurrentPage","setTotalCount","setIsFetching"],"mappings":"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","file":"static/js/5.3b125785.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n        let mapStateRedirect = (state) => {\r\n                return {\r\n                        isAuth: state.auth.isAuth,\r\n                }\r\n        }\r\n        class RedirectComponent extends React.Component {\r\n                render () {\r\n                        if (this.props.isAuth===false) { return <Redirect to={'/login'}/> }\r\n                        return <Component {...this.props}/>\r\n                };\r\n        } ;\r\n        let ConnectAuthRedirectComponent = connect(mapStateRedirect)(RedirectComponent)\r\n        return ConnectAuthRedirectComponent;\r\n}\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/no_avatar.f29f0889.png\";","import React, { useState } from 'react';\r\nimport './UsersPageButton.css';\r\n\r\nconst UsersPageButton = (props) => {\r\n        let pagesCount = Math.ceil(props.totalCount / props.pagesSize)\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n                pages.push(i);\r\n        }\r\n\r\n        const portionCount = Math.ceil(pagesCount / props.portionSize)\r\n        const [portionNumber, setPortionNumber] = useState(1)\r\n        const leftBorder = (portionNumber - 1) * props.portionSize + 1\r\n        const rightBorder = portionNumber * props.portionSize\r\n\r\n        return (\r\n                <div className='button-page'>\r\n                        <button\r\n                                className='one-button-page next-portion'\r\n                                onClick={() => setPortionNumber(portionNumber - 1)}\r\n                                disabled={portionNumber === 1}\r\n                        >\r\n                                Назад\r\n                        </button>\r\n                        <div className='portion-button'>\r\n                                {pages.filter(p => p >= leftBorder && p <= rightBorder).map(c => {\r\n                                        return (\r\n                                                <button\r\n                                                        key={c}\r\n                                                        className='one-button-page'\r\n                                                        onClick={() => props.onPageChanged(c)}>\r\n                                                        {c}\r\n                                                </button>\r\n                                        )\r\n                                })}\r\n                        </div>\r\n                        <button\r\n                                className='one-button-page next-portion'\r\n                                onClick={() => setPortionNumber(portionNumber + 1)}\r\n                                disabled={portionNumber === portionCount}\r\n                        >\r\n                                Дальше\r\n                        </button>\r\n                </div>)\r\n}\r\n\r\nexport default UsersPageButton;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport noAvatar from '../image/no_avatar.png';\r\n\r\n\r\nlet User = (props) => {\r\n        let user = props.usersData;\r\n        return (\r\n                <div className='user' key={user.id}>\r\n                        <div className='users-avatar'>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                        <div> {user.photos.small == null ? <img src={noAvatar} /> : <img src={user.photos.small} />} </div>\r\n                                </NavLink>\r\n                                <div className='users-follow-button'>\r\n                                        {user.follow\r\n                                                ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                                        onClick={() => { props.followTC(user.id) }}>Отписаться</button>\r\n                                                : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                                        onClick={() => { props.unFollowTC(user.id) }}>Подписаться</button>\r\n                                        }\r\n                                </div>\r\n                        </div>\r\n                        <div className='users-name'>\r\n                                <div>{user.name}</div>\r\n                                <div className='status'>{user.status}</div>\r\n                        </div>\r\n                        <div className='users-locaton'>\r\n                                <div>{'u.location.country'}</div>\r\n                                <div>{'u.location.city'}</div>\r\n                        </div>\r\n                </div>\r\n        )\r\n}\r\n       \r\nexport default User","import React from 'react';\r\nimport './Users.css';\r\nimport UsersPageButton from './UsersPageButton';\r\nimport User from './User';\r\n\r\nlet Users = (props) => {\r\n        return (\r\n                <div className='users-page'>\r\n                        <UsersPageButton\r\n                                totalCount={props.totalCount}\r\n                                pagesSize={props.pagesSize}\r\n                                onPageChanged={props.onPageChanged}\r\n                                portionSize={props.portionSize}\r\n                        />\r\n                       {props.usersData.map(u => <User\r\n                                key={u.id}\r\n                                followingInProgress={props.followingInProgress}\r\n                                unFollowTC={props.unFollowTC}\r\n                                followTC={props.followTC}\r\n                                usersData={u}\r\n                        />)}\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Users\r\n\r\n\r\n\r\n/* let Users = (props) => {\r\ndebugger\r\n        return (\r\n                <div className='users-page'>\r\n                        <UsersPageButton\r\n                                totalCount={props.totalCount}\r\n                                pagesSize={props.pagesSize}\r\n                                onPageChanged={props.onPageChanged}\r\n                        />\r\n                        {props.usersData.map(u =>\r\n                                <div className='users' key={u.id}>\r\n                                        <div className='users-avatar'>\r\n                                                <NavLink to={'/profile/' + u.id}>\r\n                                                        <div> {u.photos.small == null ?\r\n                                                                <img src={noAvatar} /> :\r\n                                                                <img src={u.photos.small} />\r\n                                                        }\r\n                                                        </div>\r\n                                                </NavLink>\r\n                                                <div className='users-follow-button'>\r\n                                                        {u.follow\r\n                                                                ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                                        onClick={() => { props.followTC(u.id) }}>Отписаться</button>\r\n                                                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                                        onClick={() => { props.unFollowTC(u.id) }}>Подписаться</button>\r\n                                                        }\r\n                                                </div>\r\n                                        </div>\r\n                                        <div className='users-name'>\r\n                                                <div>{u.name}</div>\r\n                                                <div className='status'>{u.status}</div>\r\n                                        </div>\r\n                                        <div className='users-locaton'>\r\n                                                <div>{'u.location.country'}</div>\r\n                                                <div>{'u.location.city'}</div>\r\n                                        </div>\r\n                                </div>\r\n                        )\r\n                        }\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Users  */\r\n\r\n","export const getUsers = (state) => {\r\n        return state.usersPage.usersData;\r\n}\r\nexport const getPagesSize = (state) => {\r\n        return state.usersPage.pagesSize;\r\n}\r\nexport const getTotalCount = (state) => {\r\n        return state.usersPage.totalCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n        return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n        return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n        return state.usersPage.followingInProgress;\r\n}\r\nexport const getPortionSize = (state) => {\r\n        return state.usersPage.portionSize;\r\n}","import React from 'react';\r\nimport './Users.css';\r\nimport { connect } from 'react-redux';\r\nimport { setUsers, setCurrentPage, setTotalCount, setIsFetching, setUsersTC,onPageChangedTC, followTC, unFollowTC} from '../Redux/users-reducer';\r\nimport Users from \"./Users\";\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getPagesSize, getUsers, getTotalCount, getCurrentPage, getIsFetching, getPortionSize, getFollowingInProgress } from '../Redux/users-selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n        componentDidMount() {this.props.setUsersTC(this.props.currentPage, this.props.pagesSize)} \r\n        \r\n        onPageChanged = (pageNumber) => {this.props.onPageChangedTC(pageNumber, this.props.pagesSize)}\r\n        \r\n        render () {     \r\n                return (\r\n                        <div className='users-comtainer'>\r\n                                {this.props.isFetching ? <Preloader/> : null}\r\n                                <Users\r\n                                        totalCount={this.props.totalCount}\r\n                                        pagesSize={this.props.pagesSize}\r\n                                        onPageChanged={this.onPageChanged}\r\n                                        usersData={this.props.usersData}\r\n                                        followingInProgress={this.props.followingInProgress}\r\n                                        followTC={this.props.followTC}\r\n                                        unFollowTC={this.props.unFollowTC}\r\n                                        portionSize={this.props.portionSize}\r\n                                />\r\n                        </div>\r\n                )}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n        return {\r\n                usersData: getUsers(state),\r\n                pagesSize: getPagesSize(state),\r\n                totalCount: getTotalCount(state),\r\n                currentPage: getCurrentPage(state),\r\n                isFetching: getIsFetching(state),\r\n                portionSize: getPortionSize(state),\r\n                followingInProgress: getFollowingInProgress(state),\r\n        }\r\n}\r\n\r\nexport default compose (connect(\r\n        mapStateToProps, \r\n        {setUsers,setCurrentPage, setTotalCount, setIsFetching, setUsersTC, onPageChangedTC, followTC, unFollowTC}),\r\n         withAuthRedirect)(UsersContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n         /* let isAuthRedirectComponent = withAuthRedirect(UsersContainer)\r\n\r\nexport default connect (mapStateToProps, \r\n        {setUsers, \r\n                setCurrentPage, setTotalCount, setIsFetching, \r\n                setUsersTC, onPageChangedTC, followTC, unFollowTC\r\n        }) \r\n        (isAuthRedirectComponent) */\r\n\r\n    \r\n//! Диспатчи, записаные по старому (может пригодится)\r\n/*1 let mapDispatchToProps = (dispatch) => {\r\n        return {\r\n                follow: (userId) => {\r\n                        dispatch(followAC(userId));\r\n                },\r\n                unFollow: (userId) => {\r\n                        dispatch(unFollowAC(userId));\r\n                },\r\n                setUsers: (usersData) => {\r\n                        dispatch(setUsersAC(usersData));\r\n                },\r\n                setCurrentPage: (pageNumber) => {\r\n                        dispatch(setCurrentPageAC(pageNumber));\r\n                },\r\n                setTotalCount: (totalCount) => {\r\n                        dispatch(setTotalCountAC(totalCount));\r\n                },\r\n                setIsFetching: (isFetching) => {\r\n                        dispatch(setIsFetchingAC(isFetching));\r\n                },\r\n        };\r\n} */\r\n\r\n /* axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pagesSize}`, {withCredentials: true}) */\r\n /* axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pagesSize}`, {withCredentials: true}) */"],"sourceRoot":""}