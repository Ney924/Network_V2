{"version":3,"sources":["components/hoc/AuthRedirect.js","utils/validators/validator.js","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfifeInfo/ProfileStatusHook.js","components/Profile/ProfifeInfo/ProfifeInfo.jsx","components/Profile/ProfilePanel/ProfilePanel.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","required","value","maxLenghtCreator","maxlenght","length","Post","className","src","message","like","maxLenght100","MyPosts","memo","postsElemetnts","profilePage","postData","map","post","MyPostsReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","placeholder","component","Input","name","validate","MyPostsContainer","dispatch","addPostAC","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onClick","updateUserStatusTC","ProfifeInfo","profile","Preloader","photos","large","fullName","ProfilePanel","Profile","ProfileContainer","userId","match","params","undefined","authorizedMyId","histoty","push","setProfilePageTC","getUserStatusTC","compose","withRouter"],"mappings":"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","file":"static/js/3.6a17d115.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n        let mapStateRedirect = (state) => {\r\n                return {\r\n                        isAuth: state.auth.isAuth,\r\n                }\r\n        }\r\n        class RedirectComponent extends React.Component {\r\n                render () {\r\n                        if (this.props.isAuth===false) { return <Redirect to={'/login'}/> }\r\n                        return <Component {...this.props}/>\r\n                };\r\n        } ;\r\n        let ConnectAuthRedirectComponent = connect(mapStateRedirect)(RedirectComponent)\r\n        return ConnectAuthRedirectComponent;\r\n}\r\n","export const required = (value) => {\r\n        if (value) return undefined;\r\n        return \"Поле обязательное для заполнения !!!!!\"     ; \r\n}\r\n\r\nexport const maxLenghtCreator = (maxlenght) => (value) => {\r\n        if (value.length > maxlenght) return `Максимальная длина поста ${maxlenght} символов !!!!`;\r\n        return undefined; \r\n}","import React from 'react';\r\nimport './Post.css'\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className='post'>      \r\n      <div className='avatar'>\r\n        <img src='https://i.pinimg.com/originals/4d/af/2f/4daf2f183af331a8ba9a12bc2a458486.jpg'/>\r\n          <span className='post-message'>{props.message}</span> \r\n        <div className='like'>like {props.like}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Posts/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLenghtCreator } from \"./../../../utils/validators/validator\";\r\nimport { Input } from \"./../../common/formsControls/formsControls\";\r\n\r\n\r\nconst maxLenght100 = maxLenghtCreator(100)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n        let postsElemetnts = props.profilePage.postData.map((post) => <Post message={post.post} like={post.like} />)\r\n\r\n        let onAddPost = (values) => {\r\n                props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n                <div className='posts'>\r\n                        <div>\r\n                                <h3>Мои посты</h3>\r\n                        </div>\r\n                        <MyPostsReduxForm onSubmit={onAddPost} />\r\n                        {postsElemetnts}\r\n                </div>\r\n        );\r\n})\r\n\r\nexport default MyPosts;\r\n\r\n\r\nconst MyPostsForm = (props) => {\r\n        return (\r\n                <form onSubmit={props.handleSubmit} className='input-post'>\r\n                        <Field\r\n                                placeholder='Написать...'\r\n                                component={Input}\r\n                                name='newPostText'\r\n                                validate={[required, maxLenght100]}\r\n                        />\r\n                        <button>Добавить</button>\r\n                </form>\r\n        )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: 'addPostForm' })(MyPostsForm)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostAC, onPostChangeActionCreator } from '../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n        return {\r\n                profilePage: state.profilePage,\r\n        }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n        return {\r\n                addPost: (newPostText) => {dispatch(addPostAC(newPostText))},\r\n        }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n\r\n\r\n\r\n//! Для справки из старых уроков\r\n/* const MyPostsContainer = (props) => {\r\n\r\n  let state = props.store.getState().profilePage;\r\n\r\n  let addPost = ()=> {\r\n    props.store.dispatch(addPostActionCreator());\r\n  }\r\n\r\n  let onPostChange = (text) => {\r\n    props.store.dispatch(onPostChangeActionCreator(text));\r\n  }\r\n\r\n  return <MyPosts\r\n    addPost={addPost}\r\n    updateNewPostText={onPostChange}\r\n    postData={state.postData}\r\n    newPostText={state.newPostText}\r\n    />\r\n\r\n} */\r\n\r\n/* updateNewPostText: (text) => {dispatch(onPostChangeActionCreator(text));} */","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusHook = (props) => {\r\n        const [editMode, setEditMode] = useState(false);\r\n        const [status, setStatus] = useState(props.status);\r\n\r\n        useEffect(() => {\r\n                setStatus(props.status)\r\n        }, [props.status])\r\n\r\n        const activateEditMode = () => {\r\n                setEditMode(true);\r\n        }\r\n\r\n        const deactivateEditMode = () => {\r\n                props.updateUserStatusTC(status)\r\n                setEditMode(false);\r\n        }\r\n\r\n        const onStatusChange = (e) => {\r\n                setStatus(e.currentTarget.value)\r\n        }\r\n\r\n        return (\r\n                <div className='profile-status'>\r\n                        {editMode === false\r\n                                ? <div\r\n                                        className='profile-status-now'\r\n                                        onDoubleClick={activateEditMode}>\r\n                                        {status || 'No status'}\r\n                                </div>\r\n                                : <div className='profile-status-change'>\r\n                                        <input\r\n                                                onChange={onStatusChange}\r\n                                                value={status}\r\n                                                autoFocus={true}\r\n                                        />\r\n                                        <button onClick={deactivateEditMode}>Сохранить</button>\r\n                                </div>\r\n                        }\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusHook;\r\n","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport './ProfifeInfo.css';\r\n//import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusHook from './ProfileStatusHook';\r\n\r\n\r\nconst ProfifeInfo = (props) => {\r\n        return (\r\n               props.profile == null? \r\n                <Preloader/>:\r\n                <div className='profile'>\r\n                        <div className='description'>\r\n                        <img src={props.profile.photos.large == null||undefined ? 'https://pbs.twimg.com/profile_images/612140046938959872/OaKOyzpC_400x400.jpg': props.profile.photos.large}\r\n                                className='ava'\r\n                                />\r\n                                <div className='profile-info'>\r\n                                        <div className='profile-info-name'>{props.profile.fullName}</div>\r\n                                        <div className='profile-info-age'>28 лет</div>\r\n                                        <div className='profile-info-gender'>мужчина</div>\r\n                                </div>\r\n                        </div>\r\n                        <hr className='line'/>\r\n                        <ProfileStatusHook status={props.status} updateUserStatusTC={props.updateUserStatusTC}/>\r\n                </div>\r\n        );\r\n}\r\nexport default ProfifeInfo;\r\n\r\n//?sdfsdfsdfsdf\r\n//!asdasd\r\n//*sadasdasd\r\n//TODO asdasdasd","import React from 'react';\r\nimport './ProfilePanel.css'\r\n\r\nconst ProfilePanel = (props) => {\r\n        return (\r\n                <div className='profile-panel'>\r\n                        <button>\r\n                                Подписки\r\n                        </button>\r\n                        <button>\r\n                                Подписчики\r\n                        </button>\r\n                        <button>\r\n                                Мои фотографии\r\n                        </button>\r\n                        <button className='right-button'>\r\n                                Обо мне\r\n                        </button>\r\n                </div>\r\n        )\r\n}\r\nexport default ProfilePanel;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfifeInfo from './ProfifeInfo/ProfifeInfo';\r\nimport './Profile.css'\r\nimport ProfilePanel from './ProfilePanel/ProfilePanel';\r\n\r\n\r\nconst Profile = (props) => {\r\n        return (\r\n                <div className='content'>\r\n                        <ProfifeInfo \r\n                                profile={props.profile}\r\n                                status={props.status}\r\n                                updateUserStatusTC={props.updateUserStatusTC}\r\n                        />\r\n                        <ProfilePanel/>\r\n                        <MyPostsContainer/>\r\n                </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setProfilePageTC, getUserStatusTC, updateUserStatusTC } from '../Redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n        componentDidMount() {\r\n                let userId = this.props.match.params.userId;\r\n                if (userId == undefined) {\r\n                        userId = this.props.authorizedMyId;\r\n                        if (!userId) {\r\n                                this.props.histoty.push('/login');  //заглушка с редиректом через метод history.push\r\n                        }\r\n                }\r\n                this.props.setProfilePageTC(userId, this.props.profile);\r\n                this.props.getUserStatusTC(userId);\r\n\r\n        }\r\n        render() {\r\n                return (\r\n                        <Profile {...this.props}\r\n                                profile={this.props.profile}\r\n                                status={this.props.status}\r\n                        />\r\n                )\r\n        }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n        return {\r\n                profile: state.profilePage.profile,\r\n                status: state.profilePage.status,\r\n                authorizedMyId: state.auth.userId,\r\n                isAuth: state.auth.isAuth,\r\n        }\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,\r\n        { setProfilePageTC, getUserStatusTC, updateUserStatusTC }),\r\n        withRouter,\r\n        withAuthRedirect)\r\n        (ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* let isAuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDateProfileContainer= withRouter(isAuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps,\r\n            {setProfilePageTC} )\r\n            (WithUrlDateProfileContainer);\r\n */\r\n\r\n/* axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId) */"],"sourceRoot":""}