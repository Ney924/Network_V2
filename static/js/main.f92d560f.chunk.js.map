{"version":3,"sources":["components/api/api.js","components/Redux/dialogs-reducer.js","components/Redux/users-reducer.js","components/Redux/auth-reducer.js","components/Redux/app-reducer.js","components/image/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/NavBar/NavBar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","components/Login/LoginForm.jsx","App.js","components/Redux/redux-store.js","index.js","components/image/Loading_progress.gif","components/common/preloader/Preloader.jsx","components/common/formsControls/formsControls.js","components/Redux/profile-reducer.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersAPI","getUsersPage","currentPage","pagesSize","get","then","response","data","getUsersUnSubscribe","id","delete","getUsersSubscribe","post","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","addPhoto","photoFile","formData","FormData","append","authAPI","getAuthMe","login","email","password","rememberMe","logout","SEND_MESSAGE","ACTIV_DIALOG","initialState","dialogsData","name","messagesData","message","activeDialog","addMessageAC","newMessageBody","type","activDialogAC","dialogsReducer","state","action","interlocutor","find","item","console","log","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","usersData","totalCount","isFetching","followingInProgress","portionSize","follow","unFollow","setUsers","users","setCurrentPage","setTotalCount","setIsFetching","toggleFollowingProgress","setUsersTC","dispatch","a","items","onPageChangedTC","pageNumber","followUnfollowFlow","metodApi","actionCreator","resultCode","followTC","bind","unFollowTC","usersReducer","map","u","filter","SET_USER_DATA","isAuth","setAuthUserData","payload","setAuthUserDataTC","authReducer","SET_INITIALAZE","initialazed","appReducer","Header","props","className","src","Logo","onClick","logoutTC","to","HeaderContainer","this","React","Component","connect","auth","NavBar","activeClassName","News","useState","count","setCount","Music","useEffect","document","title","Settings","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createFielfInput","error","loginTC","messageError","messages","length","stopSubmit","_error","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initialazeAppTC","initialize","path","render","fallback","Preloader","component","Login","compose","app","promise","Promise","all","withRouter","redusers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","getElementById","PreloaderGif","Input","input","meta","touched","placeholder","ADD_POST","SET_PROFILE_PAGE","SET_STATUS","UPDATE_STATUS","DELETE_POST","ADD_PHOTO","postData","like","profile","addPostAC","newPostText","setUserStatus","setPhoto","photos","setProfilePageTC","getUserStatusTC","updateUserStatusTC","saveFotoTC","p"],"mappings":"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","file":"static/js/main.f92d560f.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n            baseURL: 'https://social-network.samuraijs.com/api/1.0/' , \r\n            withCredentials: true,\r\n            headers: {\"API-KEY\" : \"879087b0-6726-4a3a-b345-a3063ffa34d8\"},\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n        getUsersPage (currentPage, pagesSize) {                                   //Вывод юзеров, постранично                        \r\n                return instance.get(`users?page=${currentPage}&count=${pagesSize}`)\r\n        .       then(response => {return response.data}) \r\n        },\r\n        getUsersUnSubscribe (id) {                                              //Отписаться от юзера\r\n                return instance.delete(`follow/${id}`)\r\n                .then(response => {return response.data})                                                          \r\n        },\r\n        getUsersSubscribe (id) {                                                //Подписаться  на юзера\r\n                return instance.post(`follow/${id}`)\r\n                .then(response => {return response.data})                                                          \r\n        }\r\n}\r\n\r\nexport const profileAPI = {\r\n        getProfile (userId) {                                                   //Показать профиль выбранного пользователя\r\n                return instance.get(`profile/` + userId)\r\n                .then(response => {return response.data})\r\n        },\r\n        getStatus (userId) {                                                   //Показать профиль выбранного пользователя\r\n                return instance.get(`profile/status/` + userId)\r\n                .then(response => {return response.data})\r\n        },\r\n        updateStatus (status) {                                                   //Показать профиль выбранного пользователя\r\n                return instance.put(`profile/status`, {status: status})\r\n                .then(response => {return response.data})\r\n        },\r\n        addPhoto (photoFile) {                                                   //Показать профиль выбранного пользователя\r\n                const formData = new FormData();\r\n                formData.append('image', photoFile)\r\n                return instance.put(`profile/photo`, formData, {\r\n                        headers: {\r\n                                'Content-Type': 'multipart/form-data'\r\n                        }\r\n                }\r\n                )\r\n                .then(response => {return response.data})\r\n        },\r\n}\r\n\r\nexport const authAPI = {\r\n        getAuthMe() {                                                             //Войти в соц сеть под своим именем\r\n                return instance.get(`auth/me`)\r\n                .then(response => {return response.data})  //!ПРОМИС .then ПРОЧИТАТЬ КАК ЭТЬО РАБОТАЕТ\r\n        },\r\n        login(email, password, rememberMe = false) {                               //логинимся в свой профиль                         \r\n                return instance.post(`auth/login`, {email, password, rememberMe})\r\n                .then(response => {return response.data}) \r\n        },\r\n        logout() {                                                             //Выходим из профиля\r\n                return instance.delete(`auth/login`)\r\n                .then(response => {return response.data}) \r\n        },\r\n}\r\n\r\nexport const dialogsAPI = {}\r\n","let SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\nlet ACTIV_DIALOG = 'dialogs/ACTIV_DIALOG';\r\n\r\nlet initialState = {\r\n        dialogsData: [\r\n                { id: 1, name: 'Илья' },\r\n                { id: 2, name: 'Анна' },\r\n                { id: 3, name: 'Алексей' },\r\n                { id: 4, name: 'Егор' },\r\n                { id: 5, name: 'Константин' },\r\n                { id: 5, name: 'Павел' }\r\n        ],\r\n        messagesData: [\r\n                { id: 1, message: 'Привет' },\r\n                { id: 2, message: 'Как дела' },\r\n                { id: 3, message: 'Учу реакт' },\r\n        ],\r\n        activeDialog: '',\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SEND_MESSAGE:\r\n                        return {\r\n                                ...state,\r\n                                messagesData: [...state.messagesData, { id: 5, message: action.messagesData }],\r\n                        }\r\n                case ACTIV_DIALOG:\r\n                        const interlocutor = state.dialogsData.find(item => item.id == action.id)\r\n                        console.log({interlocutor});\r\n                        return {\r\n                                ...state,\r\n                                activeDialog: interlocutor.name\r\n                        } \r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\nexport let addMessageAC = (newMessageBody) => { return { type: SEND_MESSAGE, messagesData: newMessageBody } }\r\nexport let activDialogAC = (id) => { return { type: ACTIV_DIALOG, id } }\r\n\r\nexport default dialogsReducer;\r\n\r\n","import { usersAPI } from '../api/api';\r\n\r\nlet FOLLOW = 'users/FOLLOW';\r\nlet UNFOLLOW = 'users/UNFOLLOW';\r\nlet SET_USERS = 'users/SET_USERS';\r\nlet SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nlet SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT';\r\nlet TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n        usersData: [],\r\n        pagesSize: 50,\r\n        totalCount: 0,\r\n        currentPage: 1,\r\n        isFetching: false,\r\n        followingInProgress: [],\r\n        portionSize: 10,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case FOLLOW:\r\n                        return {\r\n                                ...state,\r\n                                usersData: state.usersData.map(u => {\r\n                                        if (u.id === action.userId) {\r\n                                                return { ...u, follow: true };\r\n                                        }\r\n                                        return u;\r\n                                }),\r\n                        }\r\n                case UNFOLLOW:\r\n                        return {\r\n                                ...state,\r\n                                usersData: state.usersData.map(u => {\r\n                                        if (u.id === action.userId) {\r\n                                                return { ...u, follow: false };\r\n                                        }\r\n                                        return u;\r\n                                }),\r\n                        }\r\n                case SET_USERS:\r\n                        return {\r\n                                ...state, usersData: [...action.users]\r\n                        }\r\n                case SET_CURRENT_PAGE:\r\n                        return {\r\n                                ...state, currentPage: action.currentPage\r\n                        }\r\n                case SET_TOTAL_COUNT:\r\n                        return {\r\n                                ...state, totalCount: action.totalCount\r\n                        }\r\n                case TOGGLE_IS_FETCHING:\r\n                        return {\r\n                                ...state, isFetching: action.isFetching\r\n                        }\r\n                case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n                        return {\r\n                                ...state, followingInProgress: action.isFetching\r\n                                        ? [...state.followingInProgress, action.userId]\r\n                                        : state.followingInProgress.filter(id => id != action.userId)\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//!ActionCreators\r\nexport const follow = (userId) => { return { type: FOLLOW, userId } }\r\nexport const unFollow = (userId) => { return { type: UNFOLLOW, userId } }\r\nexport const setUsers = (users) => { return { type: SET_USERS, users } }\r\nexport const setCurrentPage = (currentPage) => { return { type: SET_CURRENT_PAGE, currentPage } }\r\nexport const setTotalCount = (totalCount) => { return { type: SET_TOTAL_COUNT, totalCount } }\r\nexport const setIsFetching = (isFetching) => { return { type: TOGGLE_IS_FETCHING, isFetching } }\r\nexport const toggleFollowingProgress = (isFetching, userId) => { return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId } }\r\n\r\n//!ThunkCreator\r\nexport const setUsersTC = (currentPage, pagesSize) => async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        const data = await usersAPI.getUsersPage(currentPage, pagesSize)\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalCount(data.totalCount));\r\n}\r\nexport const onPageChangedTC = (pageNumber, pagesSize) => async (dispatch) => {\r\n        dispatch(setCurrentPage(pageNumber));\r\n        dispatch(setIsFetching(true));\r\n        const data = await usersAPI.getUsersPage(pageNumber, pagesSize)\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, metodApi, actionCreator) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        const data = await metodApi(userId)\r\n        if (data.resultCode == 0) {\r\n                dispatch(actionCreator(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n\r\n}\r\nexport const followTC = (id) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.getUsersUnSubscribe.bind(usersAPI), unFollow);\r\n}\r\nexport const unFollowTC = (id) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.getUsersSubscribe.bind(usersAPI), follow);\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n\r\n//! ДО РЕФАКТОРИНГА!\r\n/*export const followTC = (id) => async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, id))\r\n        const data = await usersAPI.getUsersUnSubscribe(id)\r\n        if (data.resultCode == 0) {\r\n                dispatch(unFollow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n}\r\n\r\nexport const unFollowTC = (id) => async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, id))\r\n        const data = await usersAPI.getUsersSubscribe(id)\r\n        if (data.resultCode == 0) {\r\n                dispatch(follow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n} */","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nlet SET_USER_DATA = 'auth/SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n        userId: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SET_USER_DATA:\r\n                        return {\r\n                                ...state,\r\n                                ...action.payload,\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//!ActionCreators\r\nexport let setAuthUserData = (userId, email, login, isAuth) => { return { type: SET_USER_DATA, payload: { userId, email, login, isAuth } } }\r\n\r\n//!ThunkCreator\r\nexport let setAuthUserDataTC = () => async (dispatch) => {\r\n        const data = await authAPI.getAuthMe()\r\n                if (data.resultCode === 0) {\r\n                        let { id, email, login } = data.data;\r\n                        dispatch(setAuthUserData(id, email, login, true));\r\n                }\r\n}\r\n\r\nexport let loginTC = (email, password, rememberMe) => async (dispatch) => {\r\n        const data = await authAPI.login(email, password, rememberMe)\r\n                if (data.resultCode === 0) {\r\n                        dispatch(setAuthUserDataTC())\r\n                }\r\n                else {\r\n                        let messageError = data.messages.length > 0 ? data.messages[0]: 'Ошибка'\r\n                        let action = stopSubmit('login', { _error: messageError });\r\n                        dispatch(action)\r\n                }\r\n}\r\n\r\nexport let logoutTC = () => async (dispatch) => {\r\n        const data = await authAPI.logout()\r\n                if (data.resultCode === 0) {\r\n                        dispatch(setAuthUserData(null, null, null, false))\r\n                }   \r\n        }\r\n\r\nexport default authReducer;\r\n\r\n","import { authAPI } from '../api/api';\r\nimport { setAuthUserDataTC } from './auth-reducer'\r\n\r\nlet SET_INITIALAZE = 'app/SET_INITIALAZE';\r\n\r\nlet initialState = {\r\n        initialazed: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SET_INITIALAZE:\r\n                        return {\r\n                                ...state,\r\n                                initialazed: true,\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//!ActionCreators\r\nexport let setInizialaze = () => { return { type: SET_INITIALAZE } }\r\n\r\n//!ThunkCreator\r\nexport let initialazeAppTC = () => (dispatch) => {\r\n        let promise = dispatch(setAuthUserDataTC())\r\n        Promise.all([promise])\r\n                .then(() => {\r\n                        dispatch(setInizialaze())\r\n                })\r\n}\r\n\r\nexport default appReducer;\r\n\r\n\r\n\r\n/* export let loginTC = (email, password, rememberMe) => {\r\n        return (dispatch) => {\r\n                authAPI.login(email, password, rememberMe).then(data => {\r\n                        if (data.resultCode === 0) {\r\n                                dispatch(setAuthUserDataTC())\r\n                        }\r\n                        else {\r\n                                let messageError = data.messages.length > 0 ? data.messages[0]: 'Ошибка'\r\n                                let action = stopSubmit('login', { _error: messageError });\r\n                                dispatch(action)\r\n                        }\r\n                });\r\n        }\r\n}\r\nexport let logoutTC = () => {\r\n        return (dispatch) => {\r\n                authAPI.logout().then(data => {\r\n                        if (data.resultCode === 0) {\r\n                                dispatch(setAuthUserData(null, null, null, false))\r\n                        }\r\n                });\r\n        }\r\n} */","export default __webpack_public_path__ + \"static/media/logo.a104129a.png\";","import React from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport './Header.css'\r\nimport Logo from './../image/logo.png'\r\n\r\nconst Header = (props) => {        \r\n        return (\r\n                <div className='header'>\r\n                        <img src={Logo}/>\r\n\r\n                        <div className='login-blok'>\r\n                                {\r\n                                        props.isAuth\r\n                                                ? <div className='login-blok-button'> \r\n                                                        <span className='login-blok-button'>{props.login} </span>\r\n                                                        <button onClick={props.logoutTC} className='login-button'> Выйти </button>\r\n                                                </div>\r\n                                                : <NavLink to={'/login'} className='login-blok-button'> <button className='login-blok-button'> Login </button> </NavLink>\r\n                                }\r\n                        </div>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutTC} from '../Redux/auth-reducer';\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n              \r\n        render () {\r\n                return <Header {...this.props}/>\r\n        }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n})\r\n\r\nexport default connect (mapStateToProps, \r\n        {logoutTC})(HeaderContainer);","import React from 'react';\r\nimport './NavBar.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst NavBar = () => {\r\n        return (\r\n                <nav className='nav'>\r\n                        <div className='item'>\r\n                                <NavLink to='/profile' activeClassName='active-link'>Профиль</NavLink>\r\n                        </div>\r\n                        <div className='item'>\r\n                                <NavLink to='/dialogs' activeClassName='active-link'>Сообщения</NavLink>\r\n                        </div>\r\n                        <div className='item'>\r\n                                <NavLink to='/users' activeClassName='active-link'>Друзья</NavLink>\r\n                        </div>\r\n                        <div className='item'>\r\n                                <NavLink to='/news' activeClassName='active-link'>Новости</NavLink>\r\n                        </div>\r\n                        <div className='item'>\r\n                                <NavLink to='/music' activeClassName='active-link'>Музыка</NavLink>\r\n                        </div>\r\n                        <div className='item'>\r\n                                <NavLink to='/settings' activeClassName='active-link'>Настройки</NavLink>\r\n                        </div>\r\n                </nav>\r\n        );\r\n}\r\n\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\n\r\nfunction News() {\r\n  // Объявление переменной состояния, которую мы назовём \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <p>Вы кликнули {count} раз</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Нажми на меня\r\n      </button>\r\n      <button onClick={() => setCount(count - 5)}>\r\n       На меня не нажимай!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default News","import React, { useState, useEffect } from 'react';\r\n\r\nconst Music = () => {\r\n        const [count, setCount] = useState(0);\r\n      \r\n        // По принципу componentDidMount и componentDidUpdate:\r\n        useEffect(() => {\r\n          // Обновляем заголовок документа, используя API браузера\r\n          document.title = `Вы нажали ${count} раз`;\r\n        });\r\n      \r\n        return (\r\n          <div>\r\n            <p>Вы нажали {count} раз</p>\r\n            <button onClick={() => setCount(count + 1)}>\r\n              Нажми на меня\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n\r\nexport default Music;\r\n","import React from 'react';\r\n\r\nconst Settings = () => {\r\n        return (\r\n                <div>\r\n                     Settings  \r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport './Login.css';\r\nimport { reduxForm } from 'redux-form'\r\nimport { LoginForm } from \"./LoginForm\";\r\nimport { connect } from 'react-redux';\r\nimport { loginTC } from '../Redux/auth-reducer';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToProps = (state) => {\r\n        return {\r\n                isAuth: state.auth.isAuth,\r\n        }\r\n}\r\n\r\nconst Login = (props) => {\r\n\r\n        const LoginMe = (formData) => {\r\n                props.loginTC(formData.email, formData.password, formData.rememberMe); // тут loginTC это callback, который внутри себя диспатчит thunkCreator с таким же названием loginTC   \r\n        }\r\n\r\n        if (props.isAuth) { return <Redirect to={'/profile'} /> }\r\n\r\n        return (\r\n                <div className='login-user-window'>\r\n                        <h1>Введите свои данные</h1>\r\n                        <LoginReduxForm onSubmit={LoginMe} />\r\n                </div>\r\n\r\n        )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default connect(mapStateToProps, { loginTC })(Login);","import React from 'react';\r\nimport { createFielfInput } from '../common/formsControls/formsControls';\r\nimport './Login.css';\r\n\r\nexport const LoginForm = (props) => {\r\n\r\n        return (\r\n                <form onSubmit={props.handleSubmit}>\r\n                        <div className='login-user'>\r\n                                <div className='login-user-item'>\r\n                                        {createFielfInput('Login', 'input', 'email', 'login-user-input', null)}\r\n                                </div>\r\n                                <div className='login-user-item'>\r\n                                        {createFielfInput('Password', 'input', 'password', 'login-user-input', 'password')}\r\n                                </div>\r\n                                {props.error && <div className='login-error'>\r\n                                        {props.error}\r\n                                </div>}\r\n                                <div className='login-user-item'>\r\n                                        {createFielfInput(null, 'input', 'rememberMe', null, 'checkbox')}\r\n                                        Запомнить меня\r\n                                </div>\r\n                                <div className='login-user-item'>\r\n                                        <button>Login</button>\r\n                                </div>\r\n                        </div>\r\n                </form>\r\n        )\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initialazeAppTC } from './components/Redux/app-reducer';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Login from './components/Login/Login';\r\nimport Preloader from './components/common/preloader/Preloader';\r\nconst ProfileContainer = React.lazy(()=>import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(()=>import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(()=>import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n        componentDidMount() {\r\n                this.props.initialazeAppTC()\r\n        }\r\n        render() {\r\n                if (!this.props.initialize) {\r\n                        return <Preloader/>\r\n                }\r\n                return (\r\n                        <div className=\"app-wrapper content\">\r\n                                <HeaderContainer />\r\n                                <NavBar />\r\n                                <div className='content-board'>\r\n                                        <Route\r\n                                                path='/profile/:userId?'\r\n                                                render={() => <Suspense fallback={<Preloader/>}> <ProfileContainer /> </Suspense>} \r\n                                        />\r\n                                        <Route\r\n                                                path='/dialogs'\r\n                                                render={() => <Suspense fallback={<Preloader/>}> <DialogsContainer /> </Suspense>} \r\n                                        />\r\n                                        <Route\r\n                                                path='/users'\r\n                                                render={() => <Suspense fallback={<Preloader/>}> <UsersContainer /> </Suspense>}  \r\n                                        />\r\n                                        <Route path='/news' component={News} />\r\n                                        <Route path='/music' component={Music} />\r\n                                        <Route path='/settings' component={Settings} />\r\n                                        <Route path='/login' component={Login} />\r\n                                </div>\r\n                        </div>\r\n                )\r\n        }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ initialize: state.app.initialazed })\r\n\r\nexport default compose(\r\n        connect(mapStateToProps, { initialazeAppTC }),\r\n        withRouter)\r\n        (App);","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport authReducer from './auth-reducer';\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer';\r\n\r\n\r\nlet redusers = combineReducers (\r\n        {\r\n                profilePage: profileReducer,\r\n                dialogsPage: dialogsReducer,\r\n                usersPage: usersReducer,\r\n                auth: authReducer,\r\n                form: formReducer,\r\n                app: appReducer,\r\n        }\r\n);\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport store from './components/Redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n        <HashRouter /* basename={process.env.PUBLIC_URL} */> {/* не работает  */}\r\n                <Provider store={store}>\r\n                        <App store={store} />\r\n                </Provider>\r\n        </HashRouter>, document.getElementById('root')\r\n);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/Loading_progress.c16e84ee.gif\";","import React from 'react';\r\nimport './Preloader.css';\r\nimport PreloaderGif from './../../image/Loading_progress.gif';\r\n\r\nlet Preloader = () => {\r\n        return (\r\n                <div className='preloader'>\r\n                         <img src={PreloaderGif}/>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport './formsControls.css'\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n        return (\r\n                <div className='input-form'>\r\n                        <input {...input} {...props} />\r\n                        {meta.touched && meta.error && <span className='error'>{meta.error}'</span>}\r\n                </div>\r\n        )\r\n}\r\n\r\nexport const createFielfInput = (placeholder, component, name, className, type) => {\r\n        return (\r\n                <Field\r\n                        placeholder={placeholder}\r\n                        component={component}\r\n                        name={name}\r\n                        className={className}\r\n                        type={type}\r\n                />\r\n        )\r\n\r\n}","import { profileAPI } from '../api/api';\r\n\r\nlet ADD_POST = 'profile/ADD-POST';\r\nlet SET_PROFILE_PAGE = 'profile/SET_PROFILE_PAGE';\r\nlet SET_STATUS = 'profile/SET_STATUS';\r\nlet UPDATE_STATUS = 'profile/UPDATE_STATUS';\r\nlet DELETE_POST = 'profile/DELETE_POST';\r\nlet ADD_PHOTO = 'profile/ADD_PHOTO';\r\n\r\nlet initialState = {\r\n        postData: [\r\n                { id: 1, post: 'Это мой первый пост', like: 5 },\r\n                { id: 2, post: 'Привет, как у вас дела?', like: 2 },\r\n                { id: 3, post: 'Это мой первый проект на React', like: 10 },\r\n        ],\r\n        profile: null,\r\n        status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case ADD_POST:\r\n                        return {\r\n                                ...state,\r\n                                postData: [...state.postData, { id: 5, post: action.newPostText, like: 25, }],\r\n                        }\r\n                case DELETE_POST: //!ДОБАВИТЬ КНОПКУ\r\n                        return {\r\n                                ...state,\r\n                                postData: [...state.postData.filter(p => !p.action.id)]\r\n                        }\r\n                case SET_PROFILE_PAGE:\r\n                        return {\r\n                                ...state,\r\n                                profile: action.profile,\r\n                        }\r\n                case SET_STATUS:\r\n                        return {\r\n                                ...state,\r\n                                status: action.status,\r\n                        }\r\n                case UPDATE_STATUS:\r\n                        return {\r\n                                ...state,\r\n                                status: action.status,\r\n                        }\r\n                case ADD_PHOTO:\r\n                        return {\r\n                                ...state, \r\n                                profile: {...state.profile,photos: action.photos}\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//нужно подправить нейминг\r\n//!ActionCreators\r\nexport let addPostAC = (newPostText) => { return { type: ADD_POST, newPostText } }\r\nexport let deletePostAC = (id) => { return { type: DELETE_POST, id } }\r\nexport let setProfilePage = (profile) => { return { type: SET_PROFILE_PAGE, profile } }\r\nexport let setUserStatus = (status) => { return { type: SET_STATUS, status } }\r\nexport let setPhoto = (photos) => { return { type: ADD_PHOTO, photos } }\r\n\r\n//!ThunkCreator\r\nexport const setProfilePageTC = (userId) => async (dispatch) => {\r\n        const data = await profileAPI.getProfile(userId)\r\n        dispatch(setProfilePage(data));\r\n}\r\n\r\nexport const getUserStatusTC = (userId) => async (dispatch) => {\r\n        const data = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateUserStatusTC = (status) => async (dispatch) => {\r\n        const data = await profileAPI.updateStatus(status)\r\n        if (data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n        }\r\n}\r\n\r\nexport const saveFotoTC = (photos) => async (dispatch) => {\r\n        const data = await profileAPI.addPhoto(photos)\r\n        if (data.resultCode === 0) {\r\n                dispatch(setPhoto(data.data.photos));\r\n        }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}