{"version":3,"sources":["components/Redux/dialogs-reducer.js","components/Redux/users-reducer.js","components/api/api.js","components/Redux/auth-reducer.js","components/Redux/app-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/NavBar/NavBar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","components/Login/LoginForm.jsx","App.js","components/Redux/redux-store.js","index.js","components/common/preloader/Preloader.jsx","components/common/formsControls/formsControls.js","components/Redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogsData","id","name","messagesData","message","addMessageAC","newMessageBody","type","dialogsReducer","state","action","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","usersData","pagesSize","totalCount","currentPage","isFetching","followingInProgress","portionSize","follow","userId","unFollow","setUsers","users","setCurrentPage","setTotalCount","setIsFetching","toggleFollowingProgress","setUsersTC","dispatch","a","usersAPI","getUsersPage","data","items","onPageChangedTC","pageNumber","followUnfollowFlow","metodApi","actionCreator","resultCode","followTC","getUsersUnSubscribe","bind","unFollowTC","getUsersSubscribe","usersReducer","map","u","filter","instance","axios","baseURL","withCredentials","headers","get","then","response","delete","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","getAuthMe","login","email","password","rememberMe","logout","SET_USER_DATA","isAuth","setAuthUserData","payload","setAuthUserDataTC","authReducer","SET_INITIALAZE","initialazed","appReducer","Header","props","className","src","onClick","logoutTC","to","HeaderContainer","this","React","Component","connect","auth","NavBar","activeClassName","News","useState","count","setCount","Music","useEffect","document","title","Settings","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createFielfInput","error","loginTC","messageError","messages","length","stopSubmit","_error","formData","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initialazeAppTC","initialize","path","render","fallback","Preloader","component","Login","compose","app","promise","Promise","all","withRouter","redusers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","getElementById","Input","input","meta","touched","placeholder","ADD_POST","SET_PROFILE_PAGE","SET_STATUS","UPDATE_STATUS","DELETE_POST","postData","like","profile","addPostAC","newPostText","setUserStatus","setProfilePageTC","getUserStatusTC","updateUserStatusTC","p"],"mappings":"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","file":"static/js/main.ca409c92.chunk.js","sourcesContent":["let SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n                dialogsData: [\r\n                        {id: 1, name: 'Ilya'},\r\n                        {id: 2, name: 'Anna'},\r\n                        {id: 3, name: 'Aleksey'},\r\n                        {id: 4, name: 'Egor'},\r\n                        {id: 5, name: 'Konstantin'},\r\n                ],\r\n                messagesData: [\r\n                        {id: 1, message: 'Привет'},\r\n                        {id: 2, message: 'Как дела'},\r\n                        {id: 3, message: 'Учу реакт'},\r\n                        {id: 4, message: 'горит славно'},\r\n                ],\r\n};\r\nconst dialogsReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SEND_MESSAGE:\r\n                        return {\r\n                                ...state,\r\n                                messagesData: [...state.messagesData, {id: 5, message: action.messagesData}],  //добавляем новое сообщение\r\n                        }  \r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\nexport let addMessageAC = (newMessageBody) => { return {type: SEND_MESSAGE, messagesData: newMessageBody} }\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\n/* const dialogsReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SEND_MESSAGE:\r\n                        return {\r\n                                ...state,\r\n                                messagesData: [...state.messagesData, {id: 5, message: state.newMessageText,}],\r\n                                newTextMessage: '',\r\n                        }  \r\n                case UPDATE_NEW_MESSAGE_TEXT: \r\n                        return {\r\n                                ...state,\r\n                                newMessageText: action.newTextMessage,\r\n                        };\r\n                default:\r\n                        return state;\r\n        }\r\n} */\r\n\r\n","import { usersAPI } from '../api/api';\r\n\r\nlet FOLLOW = 'users/FOLLOW';\r\nlet UNFOLLOW = 'users/UNFOLLOW';\r\nlet SET_USERS = 'users/SET_USERS';\r\nlet SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nlet SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT';\r\nlet TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n        usersData: [],\r\n        pagesSize: 50,\r\n        totalCount: 0,\r\n        currentPage: 1,\r\n        isFetching: false,\r\n        followingInProgress: [],\r\n        portionSize: 10,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case FOLLOW:\r\n                        return {\r\n                                ...state,\r\n                                usersData: state.usersData.map(u => {\r\n                                        if (u.id === action.userId) {\r\n                                                return { ...u, follow: true };\r\n                                        }\r\n                                        return u;\r\n                                }),\r\n                        }\r\n                case UNFOLLOW:\r\n                        return {\r\n                                ...state,\r\n                                usersData: state.usersData.map(u => {\r\n                                        if (u.id === action.userId) {\r\n                                                return { ...u, follow: false };\r\n                                        }\r\n                                        return u;\r\n                                }),\r\n                        }\r\n                case SET_USERS:\r\n                        return {\r\n                                ...state, usersData: [...action.users]\r\n                        }\r\n                case SET_CURRENT_PAGE:\r\n                        return {\r\n                                ...state, currentPage: action.currentPage\r\n                        }\r\n                case SET_TOTAL_COUNT:\r\n                        return {\r\n                                ...state, totalCount: action.totalCount\r\n                        }\r\n                case TOGGLE_IS_FETCHING:\r\n                        return {\r\n                                ...state, isFetching: action.isFetching\r\n                        }\r\n                case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n                        return {\r\n                                ...state, followingInProgress: action.isFetching\r\n                                        ? [...state.followingInProgress, action.userId]\r\n                                        : state.followingInProgress.filter(id => id != action.userId)\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//!ActionCreators\r\nexport const follow = (userId) => { return { type: FOLLOW, userId } }\r\nexport const unFollow = (userId) => { return { type: UNFOLLOW, userId } }\r\nexport const setUsers = (users) => { return { type: SET_USERS, users } }\r\nexport const setCurrentPage = (currentPage) => { return { type: SET_CURRENT_PAGE, currentPage } }\r\nexport const setTotalCount = (totalCount) => { return { type: SET_TOTAL_COUNT, totalCount } }\r\nexport const setIsFetching = (isFetching) => { return { type: TOGGLE_IS_FETCHING, isFetching } }\r\nexport const toggleFollowingProgress = (isFetching, userId) => { return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId } }\r\n\r\n//!ThunkCreator\r\nexport const setUsersTC = (currentPage, pagesSize) => async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        const data = await usersAPI.getUsersPage(currentPage, pagesSize)\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalCount(data.totalCount));\r\n}\r\nexport const onPageChangedTC = (pageNumber, pagesSize) => async (dispatch) => {\r\n        dispatch(setCurrentPage(pageNumber));\r\n        dispatch(setIsFetching(true));\r\n        const data = await usersAPI.getUsersPage(pageNumber, pagesSize)\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, metodApi, actionCreator) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        const data = await metodApi(userId)\r\n        if (data.resultCode == 0) {\r\n                dispatch(actionCreator(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n\r\n}\r\nexport const followTC = (id) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.getUsersUnSubscribe.bind(usersAPI), unFollow);\r\n}\r\nexport const unFollowTC = (id) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.getUsersSubscribe.bind(usersAPI), follow);\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n\r\n//! ДО РЕФАКТОРИНГА!\r\n/*export const followTC = (id) => async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, id))\r\n        const data = await usersAPI.getUsersUnSubscribe(id)\r\n        if (data.resultCode == 0) {\r\n                dispatch(unFollow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n}\r\n\r\nexport const unFollowTC = (id) => async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, id))\r\n        const data = await usersAPI.getUsersSubscribe(id)\r\n        if (data.resultCode == 0) {\r\n                dispatch(follow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n} */","import React from 'react';\r\nimport * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n            baseURL: 'https://social-network.samuraijs.com/api/1.0/' , \r\n            withCredentials: true,\r\n            headers: {\"API-KEY\" : \"879087b0-6726-4a3a-b345-a3063ffa34d8\"},\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n        getUsersPage (currentPage, pagesSize) {                                   //Вывод юзеров, постранично                        \r\n                return instance.get(`users?page=${currentPage}&count=${pagesSize}`)\r\n        .       then(response => {return response.data}) \r\n        },\r\n        getUsersUnSubscribe (id) {                                              //Отписаться от юзера\r\n                return instance.delete(`follow/${id}`)\r\n                .then(response => {return response.data})                                                          \r\n        },\r\n        getUsersSubscribe (id) {                                                //Подписаться  на юзера\r\n                return instance.post(`follow/${id}`)\r\n                .then(response => {return response.data})                                                          \r\n        }\r\n}\r\n\r\nexport const profileAPI = {\r\n        getProfile (userId) {                                                   //Показать профиль выбранного пользователя\r\n                return instance.get(`profile/` + userId)\r\n                .then(response => {return response.data})\r\n        },\r\n        getStatus (userId) {                                                   //Показать профиль выбранного пользователя\r\n                return instance.get(`profile/status/` + userId)\r\n                .then(response => {return response.data})\r\n        },\r\n        updateStatus (status) {                                                   //Показать профиль выбранного пользователя\r\n                return instance.put(`profile/status`, {status: status})\r\n                .then(response => {return response.data})\r\n        },\r\n}\r\n\r\nexport const authAPI = {\r\n        getAuthMe() {                                                             //Войти в соц сеть под своим именем\r\n                return instance.get(`auth/me`)\r\n                .then(response => {return response.data})  //!ПРОМИС .then ПРОЧИТАТЬ КАК ЭТЬО РАБОТАЕТ\r\n        },\r\n        login(email, password, rememberMe = false) {                               //логинимся в свой профиль                         \r\n                return instance.post(`auth/login`, {email, password, rememberMe})\r\n                .then(response => {return response.data}) \r\n        },\r\n        logout() {                                                             //Выходим из профиля\r\n                return instance.delete(`auth/login`)\r\n                .then(response => {return response.data}) \r\n        },\r\n}\r\n\r\nexport const dialogsAPI = {}\r\n","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nlet SET_USER_DATA = 'auth/SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n        userId: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SET_USER_DATA:\r\n                        return {\r\n                                ...state,\r\n                                ...action.payload,\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//!ActionCreators\r\nexport let setAuthUserData = (userId, email, login, isAuth) => { return { type: SET_USER_DATA, payload: { userId, email, login, isAuth } } }\r\n\r\n//!ThunkCreator\r\nexport let setAuthUserDataTC = () => async (dispatch) => {\r\n        const data = await authAPI.getAuthMe()\r\n                if (data.resultCode === 0) {\r\n                        let { id, email, login } = data.data;\r\n                        dispatch(setAuthUserData(id, email, login, true));\r\n                }\r\n}\r\n\r\nexport let loginTC = (email, password, rememberMe) => async (dispatch) => {\r\n        const data = await authAPI.login(email, password, rememberMe)\r\n                if (data.resultCode === 0) {\r\n                        dispatch(setAuthUserDataTC())\r\n                }\r\n                else {\r\n                        let messageError = data.messages.length > 0 ? data.messages[0]: 'Ошибка'\r\n                        let action = stopSubmit('login', { _error: messageError });\r\n                        dispatch(action)\r\n                }\r\n}\r\n\r\nexport let logoutTC = () => async (dispatch) => {\r\n        const data = await authAPI.logout()\r\n                if (data.resultCode === 0) {\r\n                        dispatch(setAuthUserData(null, null, null, false))\r\n                }   \r\n        }\r\n\r\nexport default authReducer;\r\n\r\n","import { authAPI } from '../api/api';\r\nimport { setAuthUserDataTC } from './auth-reducer'\r\n\r\nlet SET_INITIALAZE = 'app/SET_INITIALAZE';\r\n\r\nlet initialState = {\r\n        initialazed: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SET_INITIALAZE:\r\n                        return {\r\n                                ...state,\r\n                                initialazed: true,\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//!ActionCreators\r\nexport let setInizialaze = () => { return { type: SET_INITIALAZE } }\r\n\r\n//!ThunkCreator\r\nexport let initialazeAppTC = () => (dispatch) => {\r\n        let promise = dispatch(setAuthUserDataTC())\r\n        Promise.all([promise])\r\n                .then(() => {\r\n                        dispatch(setInizialaze())\r\n                })\r\n}\r\n\r\nexport default appReducer;\r\n\r\n\r\n\r\n/* export let loginTC = (email, password, rememberMe) => {\r\n        return (dispatch) => {\r\n                authAPI.login(email, password, rememberMe).then(data => {\r\n                        if (data.resultCode === 0) {\r\n                                dispatch(setAuthUserDataTC())\r\n                        }\r\n                        else {\r\n                                let messageError = data.messages.length > 0 ? data.messages[0]: 'Ошибка'\r\n                                let action = stopSubmit('login', { _error: messageError });\r\n                                dispatch(action)\r\n                        }\r\n                });\r\n        }\r\n}\r\nexport let logoutTC = () => {\r\n        return (dispatch) => {\r\n                authAPI.logout().then(data => {\r\n                        if (data.resultCode === 0) {\r\n                                dispatch(setAuthUserData(null, null, null, false))\r\n                        }\r\n                });\r\n        }\r\n} */","import React from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {        \r\n        return (\r\n                <div className='header'>\r\n                        <img src='https://cdn.logo.com/hotlink-ok/logo-social-sq.png' />\r\n\r\n                        <div className='login-blok'>\r\n                                {\r\n                                        props.isAuth\r\n                                                ? <div className='login-blok-button'> \r\n                                                        <span>{props.login} </span>\r\n                                                        <button onClick={props.logoutTC} className='login-button'> Выйти </button>\r\n                                                </div>\r\n                                                : <NavLink to={'/login'}> <button className='login-blok-button'> Login </button> </NavLink>\r\n                                }\r\n                        </div>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutTC} from '../Redux/auth-reducer';\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n              \r\n        render () {\r\n                return <Header {...this.props}/>\r\n        }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n})\r\n\r\nexport default connect (mapStateToProps, \r\n        {logoutTC})(HeaderContainer);","import React from 'react';\r\nimport './NavBar.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst NavBar = () => {\r\n        return (\r\n        <nav className='nav'>\r\n                <div className='item'>\r\n                        <NavLink to='/profile' activeClassName='active-link'>Profile</NavLink>\r\n                </div>\r\n                <div className='item'>\r\n                        <NavLink to='/dialogs' activeClassName='active-link'>Messages</NavLink>\r\n                </div>\r\n                <div className='item'>\r\n                        <NavLink to='/users' activeClassName='active-link'>Users</NavLink>\r\n                </div>\r\n                <div className='item'>\r\n                        <NavLink to='/news' activeClassName='active-link'>News</NavLink>\r\n                </div>\r\n                <div className='item'>\r\n                        <NavLink to='/music' activeClassName='active-link'>Music</NavLink>\r\n                </div>\r\n                <div className='item'>\r\n                        <NavLink to='/settings' activeClassName='active-link'>Settings</NavLink>\r\n                </div>\r\n        </nav>\r\n        );\r\n}\r\n\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\n\r\nfunction News() {\r\n  // Объявление переменной состояния, которую мы назовём \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <p>Вы кликнули {count} раз</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Нажми на меня\r\n      </button>\r\n      <button onClick={() => setCount(count - 5)}>\r\n       На меня не нажимай!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default News","import React, { useState, useEffect } from 'react';\r\n\r\nconst Music = () => {\r\n        const [count, setCount] = useState(0);\r\n      \r\n        // По принципу componentDidMount и componentDidUpdate:\r\n        useEffect(() => {\r\n          // Обновляем заголовок документа, используя API браузера\r\n          document.title = `Вы нажали ${count} раз`;\r\n        });\r\n      \r\n        return (\r\n          <div>\r\n            <p>Вы нажали {count} раз</p>\r\n            <button onClick={() => setCount(count + 1)}>\r\n              Нажми на меня\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n\r\nexport default Music;\r\n","import React from 'react';\r\n\r\nconst Settings = () => {\r\n        return (\r\n                <div>\r\n                     Settings  \r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport './Login.css';\r\nimport { reduxForm } from 'redux-form'\r\nimport { LoginForm } from \"./LoginForm\";\r\nimport { connect } from 'react-redux';\r\nimport { loginTC } from '../Redux/auth-reducer';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToProps = (state) => {\r\n        return {\r\n                isAuth: state.auth.isAuth,\r\n        }\r\n}\r\n\r\nconst Login = (props) => {\r\n\r\n        const LoginMe = (formData) => {\r\n                props.loginTC(formData.email, formData.password, formData.rememberMe); // тут loginTC это callback, который внутри себя диспатчит thunkCreator с таким же названием loginTC   \r\n        }\r\n\r\n        if (props.isAuth) { return <Redirect to={'/profile'} /> }\r\n\r\n        return (\r\n                <div className='login-user-window'>\r\n                        <h1>Login user</h1>\r\n                        <LoginReduxForm onSubmit={LoginMe} />\r\n                </div>\r\n\r\n        )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default connect(mapStateToProps, { loginTC })(Login);","import React from 'react';\r\nimport { createFielfInput } from '../common/formsControls/formsControls';\r\nimport './Login.css';\r\n\r\nexport const LoginForm = (props) => {\r\n\r\n        return (\r\n                <form onSubmit={props.handleSubmit}>\r\n                        <div className='login-user'>\r\n                                <div className='login-user-item'>\r\n                                        {createFielfInput('Login', 'input', 'email', 'login-user-input', null)}\r\n                                </div>\r\n                                <div className='login-user-item'>\r\n                                        {createFielfInput('Password', 'input', 'password', 'login-user-input', 'password')}\r\n                                </div>\r\n                                {props.error && <div className='login-error'>\r\n                                        {props.error}\r\n                                </div>}\r\n                                <div className='login-user-item'>\r\n                                        {createFielfInput(null, 'input', 'rememberMe', null, 'checkbox')}\r\n                                        Запомнить меня\r\n                                </div>\r\n                                <div className='login-user-item'>\r\n                                        <button>Login</button>\r\n                                </div>\r\n                        </div>\r\n                </form>\r\n        )\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initialazeAppTC } from './components/Redux/app-reducer';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Login from './components/Login/Login';\r\nimport Preloader from './components/common/preloader/Preloader';\r\nconst ProfileContainer = React.lazy(()=>import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(()=>import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(()=>import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n        componentDidMount() {\r\n                this.props.initialazeAppTC()\r\n        }\r\n        render() {\r\n                if (!this.props.initialize) {\r\n                        return <Preloader/>\r\n                }\r\n                return (\r\n                        <div className=\"app-wrapper content\">\r\n                                <HeaderContainer />\r\n                                <NavBar />\r\n                                <div className='content-board'>\r\n                                        <Route\r\n                                                path='/profile/:userId?'\r\n                                                render={() => <Suspense fallback={<Preloader/>}> <ProfileContainer /> </Suspense>} \r\n                                        />\r\n                                        <Route\r\n                                                path='/dialogs'\r\n                                                render={() => <Suspense fallback={<Preloader/>}> <DialogsContainer /> </Suspense>} \r\n                                        />\r\n                                        <Route\r\n                                                path='/users'\r\n                                                render={() => <Suspense fallback={<Preloader/>}> <UsersContainer /> </Suspense>}  \r\n                                        />\r\n                                        <Route path='/news' component={News} />\r\n                                        <Route path='/music' component={Music} />\r\n                                        <Route path='/settings' component={Settings} />\r\n                                        <Route path='/login' component={Login} />\r\n                                </div>\r\n                        </div>\r\n                )\r\n        }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ initialize: state.app.initialazed })\r\n\r\nexport default compose(\r\n        connect(mapStateToProps, { initialazeAppTC }),\r\n        withRouter)\r\n        (App);","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport authReducer from './auth-reducer';\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer';\r\n\r\n\r\nlet redusers = combineReducers (\r\n        {\r\n                profilePage: profileReducer,\r\n                dialogsPage: dialogsReducer,\r\n                usersPage: usersReducer,\r\n                auth: authReducer,\r\n                form: formReducer,\r\n                app: appReducer,\r\n        }\r\n);\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './components/Redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n        <BrowserRouter>\r\n                <Provider store={store}>\r\n                        <App store={store} />\r\n                </Provider>\r\n        </BrowserRouter>, document.getElementById('root')\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport './Preloader.css'\r\n\r\nlet Preloader = () => {\r\n        return (\r\n                <div className='preloader'>\r\n                         <img src='https://thumbs.gfycat.com/FatherlyGoodAustrianpinscher-size_restricted.gif'/>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport './formsControls.css'\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n        return (\r\n                <div className='input-form'>\r\n                        <input {...input} {...props} />\r\n                        {meta.touched && meta.error && <span className='error'>{meta.error}'</span>}\r\n                </div>\r\n        )\r\n}\r\n\r\nexport const createFielfInput = (placeholder, component, name, className, type) => {\r\n        return (\r\n                <Field\r\n                        placeholder={placeholder}\r\n                        component={component}\r\n                        name={name}\r\n                        className={className}\r\n                        type={type}\r\n                />\r\n        )\r\n\r\n}","import { profileAPI } from '../api/api';\r\n\r\nlet ADD_POST = 'profile/ADD-POST';\r\nlet SET_PROFILE_PAGE = 'profile/SET_PROFILE_PAGE';\r\nlet SET_STATUS = 'profile/SET_STATUS';\r\nlet UPDATE_STATUS = 'profile/UPDATE_STATUS';\r\nlet DELETE_POST = 'profile/DELETE_POST';\r\n\r\nlet initialState = {\r\n        postData: [\r\n                { id: 1, post: 'Это мой первый пост', like: 5 },\r\n                { id: 2, post: 'Привет, как у вас дела?', like: 2 },\r\n                { id: 3, post: 'Это мой первый проект на React', like: 10 },\r\n        ],\r\n        profile: null,\r\n        status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case ADD_POST:\r\n                        return {\r\n                                ...state,\r\n                                postData: [...state.postData, { id: 5, post: action.newPostText, like: 25, }],\r\n                        }\r\n                case DELETE_POST: //!ДОБАВИТЬ КНОПКУ\r\n                        return {\r\n                                ...state,\r\n                                postData: [...state.postData.filter(p => !p.action.id)]\r\n                        }\r\n                case SET_PROFILE_PAGE:\r\n                        return {\r\n                                ...state,\r\n                                profile: action.profile,\r\n                        }\r\n                case SET_STATUS:\r\n                        return {\r\n                                ...state,\r\n                                status: action.status,\r\n                        }\r\n                case UPDATE_STATUS:\r\n                        return {\r\n                                ...state,\r\n                                status: action.status,\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//нужно подправить нейминг\r\n//!ActionCreators\r\nexport let addPostAC = (newPostText) => { return { type: ADD_POST, newPostText } }\r\nexport let deletePostAC = (id) => { return { type: DELETE_POST, id } }\r\nexport let setProfilePage = (profile) => { return { type: SET_PROFILE_PAGE, profile, } }\r\nexport let setUserStatus = (status) => { return { type: SET_STATUS, status, } }\r\n\r\n//!ThunkCreator\r\nexport const setProfilePageTC = (userId) => async (dispatch) => {\r\n        const data = await profileAPI.getProfile(userId)\r\n        dispatch(setProfilePage(data));\r\n}\r\n\r\nexport const getUserStatusTC = (userId) => async (dispatch) => {\r\n        const data = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateUserStatusTC = (status) => async (dispatch) => {\r\n        const data = await profileAPI.updateStatus(status)\r\n        if (data.resultCode === 0) {\r\n                dispatch(setUserStatus(status));\r\n        }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}