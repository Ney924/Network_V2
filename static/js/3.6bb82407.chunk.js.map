{"version":3,"sources":["components/hoc/AuthRedirect.js","utils/validators/validator.js","components/image/no_avatar.png","components/Profile/MyPhotos/OnePhoto/OnePhoto.jsx","components/Profile/MyPhotos/MyPhotos.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfifeInfo/ProfileStatusHook.js","components/Profile/ProfifeInfo/ProfifeInfo.jsx","components/Profile/ProfilePanel/ProfilePanel.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","required","value","maxLenghtCreator","maxlenght","length","PhotosItem","className","src","photo","MyPhotos","PhotosElement","photoData","map","i","id","Post","message","like","maxLenght100","MyPosts","memo","postsElemetnts","profilePage","postData","post","MyPostsReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","placeholder","component","Input","name","validate","MyPostsContainer","dispatch","addPostAC","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onClick","updateUserStatusTC","ProfifeInfo","profile","Preloader","photos","large","Avatar","fullName","isOwner","type","target","files","saveFotoTC","for","ProfilePanel","setTabPost","setTabPhoto","Profile","tab","setTab","ProfilePage","ProfileContainer","userId","match","params","undefined","authorizedMyId","histoty","push","setProfilePageTC","getUserStatusTC","updateProfile","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.6bb82407.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n        let mapStateRedirect = (state) => {\r\n                return {\r\n                        isAuth: state.auth.isAuth,\r\n                }\r\n        }\r\n        class RedirectComponent extends React.Component {\r\n                render () {\r\n                        if (this.props.isAuth===false) { return <Redirect to={'/login'}/> }\r\n                        return <Component {...this.props}/>\r\n                };\r\n        } ;\r\n        let ConnectAuthRedirectComponent = connect(mapStateRedirect)(RedirectComponent)\r\n        return ConnectAuthRedirectComponent;\r\n}\r\n","export const required = (value) => {\r\n        if (value) return undefined;\r\n        return \"Поле обязательное для заполнения !!!!!\"     ; \r\n}\r\n\r\nexport const maxLenghtCreator = (maxlenght) => (value) => {\r\n        if (value.length > maxlenght) return `Максимальная длина поста ${maxlenght} символов !!!!`;\r\n        return undefined; \r\n}","export default __webpack_public_path__ + \"static/media/no_avatar.f29f0889.png\";","import React from 'react';\r\n\r\nconst PhotosItem = (props) => {\r\n\treturn (\r\n\t\t<div className='one-photo'> <img src={props.photo}/> </div>\r\n\t)\r\n}\r\n\r\nexport default PhotosItem;","import React from 'react';\r\nimport './MyPhotos.css';\r\nimport PhotosItem from './OnePhoto/OnePhoto';\r\n\r\nconst MyPhotos = (props) => {\r\n\tconst PhotosElement = props.photoData.map((i) => <PhotosItem key={i.id} photo={i.photo}/>)\r\n\treturn (\r\n\t\t<div className='my-photos-container'>\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Фотографии</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className='my-photos'>\r\n\t\t\t\t{PhotosElement}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyPhotos;","import React from 'react';\r\nimport './Post.css'\r\n\r\n\r\nconst Post = (props) => {\r\n        return (\r\n                <div className='post'>\r\n                        <div className='avatar'>\r\n                                <img src='https://i.pinimg.com/originals/4d/af/2f/4daf2f183af331a8ba9a12bc2a458486.jpg' />\r\n                                <span className='post-message'>{props.message}</span>\r\n                                <div className='like'>like {props.like}\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Posts/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLenghtCreator } from \"./../../../utils/validators/validator\";\r\nimport { Input } from \"./../../common/formsControls/formsControls\";\r\n\r\n\r\nconst maxLenght100 = maxLenghtCreator(100)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n        let postsElemetnts = props.profilePage.postData.map((post) => <Post message={post.post} like={post.like} />)\r\n\r\n        let onAddPost = (values) => {\r\n                props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n                <div className='posts'>\r\n                        <div>\r\n                                <h3>Мои посты</h3>\r\n                        </div>\r\n                        <MyPostsReduxForm onSubmit={onAddPost} />\r\n                        {postsElemetnts}\r\n                </div>\r\n        );\r\n})\r\n\r\nexport default MyPosts;\r\n\r\n\r\nconst MyPostsForm = (props) => {\r\n        return (\r\n                <form onSubmit={props.handleSubmit} className='input-post'>\r\n                        <Field\r\n                                placeholder='Написать...'\r\n                                component={Input}\r\n                                name='newPostText'\r\n                                validate={[required, maxLenght100]}\r\n                        />\r\n                        <button>Добавить</button>\r\n                </form>\r\n        )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: 'addPostForm' })(MyPostsForm)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostAC} from '../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofilePage: state.profilePage,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => { dispatch(addPostAC(newPostText)) },\r\n\t}\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n//! Для справки из старых уроков\r\n/* const MyPostsContainer = (props) => {\r\n\r\n  let state = props.store.getState().profilePage;\r\n\r\n  let addPost = ()=> {\r\n\tprops.store.dispatch(addPostActionCreator());\r\n  }\r\n\r\n  let onPostChange = (text) => {\r\n\tprops.store.dispatch(onPostChangeActionCreator(text));\r\n  }\r\n\r\n  return <MyPosts\r\n\taddPost={addPost}\r\n\tupdateNewPostText={onPostChange}\r\n\tpostData={state.postData}\r\n\tnewPostText={state.newPostText}\r\n\t/>\r\n\r\n} */\r\n\r\n/* updateNewPostText: (text) => {dispatch(onPostChangeActionCreator(text));} */","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusHook = (props) => {\r\n        const [editMode, setEditMode] = useState(false);\r\n        const [status, setStatus] = useState(props.status);\r\n\r\n        useEffect(() => {\r\n                setStatus(props.status)\r\n        }, [props.status])\r\n\r\n        const activateEditMode = () => {\r\n                setEditMode(true);\r\n        }\r\n\r\n        const deactivateEditMode = () => {\r\n                props.updateUserStatusTC(status)\r\n                setEditMode(false);\r\n        }\r\n\r\n        const onStatusChange = (e) => {\r\n                setStatus(e.currentTarget.value)\r\n        }\r\n\r\n        return (\r\n                <div className='profile-status'>\r\n                        {editMode === false\r\n                                ? <div\r\n                                        className='profile-status-now'\r\n                                        onDoubleClick={activateEditMode}>\r\n                                        {status || 'No status'}\r\n                                </div>\r\n                                : <div className='profile-status-change'>\r\n                                        <input\r\n                                                onChange={onStatusChange}\r\n                                                value={status}\r\n                                                autoFocus={true}\r\n                                        />\r\n                                        <button onClick={deactivateEditMode}>Сохранить</button>\r\n                                </div>\r\n                        }\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusHook;\r\n","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport './ProfifeInfo.css';\r\nimport ProfileStatusHook from './ProfileStatusHook';\r\nimport Avatar from './../../image/no_avatar.png';\r\n\r\nconst ProfifeInfo = (props) => {\r\n        const addPhoto = (e) => {\r\n                if (e.target.files.length) {\r\n                        props.saveFotoTC(e.target.files[0])\r\n                }\r\n        }\r\n\r\n        return (\r\n                props.profile == null ?\r\n                        <Preloader /> :\r\n                        <div className='profile'>\r\n                                <div className='description'>\r\n                                        <img src={props.profile.photos.large == null || undefined ? Avatar : props.profile.photos.large}\r\n                                                className='ava'\r\n                                        />\r\n                                        <div className='profile-info'>\r\n                                                <div className='profile-info-name'>{props.profile.fullName}</div>\r\n                                                <div className='profile-info-item'>28 лет</div>\r\n                                                <div className='profile-info-item'>мужчина</div>\r\n                                        </div>\r\n                                        <div className='photos-profile'>\r\n                                                {props.isOwner && <input type={'file'} id='file' onChange={addPhoto} />}              {/*чтобы привязать label к input мы задаём for по id, которыйзадан input-у*/}\r\n                                                <label for='file'>Добавить аватар</label>\r\n                                        </div>\r\n                                </div>\r\n                                <ProfileStatusHook status={props.status} updateUserStatusTC={props.updateUserStatusTC} />\r\n                        </div>\r\n        );\r\n}\r\nexport default ProfifeInfo;","import React from 'react';\r\nimport './ProfilePanel.css'\r\n\r\nconst ProfilePanel = (props) => {\r\n        return (\r\n                <div className='profile-panel'>\r\n                        <button onClick={props.setTabPost}>\r\n                                Посты\r\n                        </button>\r\n                        <button>\r\n                                Подписки\r\n                        </button>\r\n                        <button onClick={props.setTabPhoto}>\r\n                                Мои фотографии\r\n                        </button>\r\n                        <button className='right-button'>\r\n                                Обо мне\r\n                        </button>\r\n                </div>\r\n        )\r\n}\r\nexport default ProfilePanel;","import React, { useState } from 'react';\r\nimport MyPhotos from './MyPhotos/MyPhotos';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfifeInfo from './ProfifeInfo/ProfifeInfo';\r\nimport './Profile.css'\r\nimport ProfilePanel from './ProfilePanel/ProfilePanel';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\tconst [tab, setTab] = useState(1)\r\n\tconst setTabPost = () => {setTab(1)}\r\n\tconst setTabPhoto = () => {setTab(0)}\r\n\r\n\tconst ProfilePage = () => {\r\n\t\treturn (\r\n\t\t\t<div className='profile-page'>\r\n\t\t\t\t<ProfifeInfo\r\n\t\t\t\t\tprofile={props.profile}\r\n\t\t\t\t\tstatus={props.status}\r\n\t\t\t\t\tupdateUserStatusTC={props.updateUserStatusTC}\r\n\t\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\t\tsaveFotoTC={props.saveFotoTC}\r\n\t\t\t\t/>\r\n\t\t\t\t<ProfilePanel setTabPost={setTabPost} setTabPhoto={setTabPhoto} />\r\n\t\t\t\t{tab == 1 ? <MyPostsContainer /> : <MyPhotos photoData={props.photoData}/>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ProfilePage />\r\n\t);\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setProfilePageTC, getUserStatusTC, updateUserStatusTC, saveFotoTC } from '../Redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\tupdateProfile() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (userId == undefined) {\r\n\t\t\tuserId = this.props.authorizedMyId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.histoty.push('/login');  //заглушка с редиректом через метод history.push\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.setProfilePageTC(userId, this.props.profile);\r\n\t\tthis.props.getUserStatusTC(userId);\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateProfile();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (this.props.match.params.userId != prevProps.match.params.userId) {\r\n\t\t\tthis.updateProfile();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tdebugger\r\n                return (\r\n\t\t\t<Profile {...this.props}\r\n\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\tstatus={this.props.status}\r\n\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\tsaveFotoTC={this.props.saveFotoTC}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tauthorizedMyId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth,\r\n                photoData: state.profilePage.photoData,\r\n\t}\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,\r\n\t{ setProfilePageTC, getUserStatusTC, updateUserStatusTC, saveFotoTC }),\r\n\twithRouter,\r\n\twithAuthRedirect)\r\n\t(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* let isAuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDateProfileContainer= withRouter(isAuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps,\r\n\t\t\t{setProfilePageTC} )\r\n\t\t\t(WithUrlDateProfileContainer);\r\n */\r\n\r\n/* axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId) */"],"sourceRoot":""}