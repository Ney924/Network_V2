{"version":3,"sources":["components/api/api.js","components/Redux/dialogs-reducer.js","components/Redux/users-reducer.js","components/Redux/auth-reducer.js","components/Redux/app-reducer.js","components/image/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/NavMenu/NavMenu.jsx","components/Login/Login.jsx","components/Login/LoginForm.jsx","App.js","components/Redux/redux-store.js","index.js","components/common/formsControls/formsControls.js","components/image/Loading_progress.gif","components/common/preloader/Preloader.jsx","components/Redux/profile-reducer.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersAPI","getUsersPage","currentPage","pagesSize","get","then","response","data","getUsersUnSubscribe","id","delete","getUsersSubscribe","post","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","addPhoto","photoFile","formData","FormData","append","saveProfileData","profile","authAPI","getAuthMe","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","SEND_MESSAGE","ACTIV_DIALOG","initialState","dialogsData","name","messagesData","message","activeDialog","addMessageAC","newMessageBody","type","activDialogAC","dialogsReducer","state","action","interlocutor","find","item","console","log","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","usersData","totalCount","isFetching","followingInProgress","portionSize","follow","unFollow","setUsers","users","setCurrentPage","setTotalCount","setIsFetching","toggleFollowingProgress","setUsersTC","dispatch","a","items","onPageChangedTC","pageNumber","followUnfollowFlow","metodApi","actionCreator","resultCode","followTC","bind","unFollowTC","usersReducer","map","u","filter","SET_USER_DATA","GET_CAPTCHA_URL","isAuth","captchaURL","setAuthUserData","payload","getCaptchaUrlSucsess","setAuthUserDataTC","captchaTC","url","authReducer","SET_INITIALAZE","initialazed","appReducer","Header","props","className","src","Logo","onClick","logoutTC","to","HeaderContainer","this","React","Component","connect","auth","NavMenu","activeClassName","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createFielfInput","error","loginTC","messageError","messages","length","stopSubmit","_error","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initialazeAppTC","initialize","path","render","fallback","Preloader","component","Login","compose","app","promise","Promise","all","withRouter","redusers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","Input","input","meta","touched","placeholder","PreloaderGif","ADD_POST","SET_PROFILE_PAGE","SET_STATUS","UPDATE_STATUS","DELETE_POST","ADD_PHOTO","postData","like","photoData","photo","addPostAC","newPostText","setUserStatus","setPhoto","photos","setProfilePageTC","getUserStatusTC","updateUserStatusTC","saveFotoTC","saveProfileDataTC","getState","reject","p"],"mappings":"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","file":"static/js/main.7892ea0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\twithCredentials: true,\r\n\theaders: { \"API-KEY\": \"879087b0-6726-4a3a-b345-a3063ffa34d8\" },\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n\tgetUsersPage(currentPage, pagesSize) {                                   //Вывод юзеров, постранично                        \r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pagesSize}`)\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n\tgetUsersUnSubscribe(id) {                                              //Отписаться от юзера\r\n\t\treturn instance.delete(`follow/${id}`)\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n\tgetUsersSubscribe(id) {                                                //Подписаться  на юзера\r\n\t\treturn instance.post(`follow/${id}`)\r\n\t\t\t.then(response => { return response.data })\r\n\t}\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId) {                                                   //Показать профиль выбранного пользователя\r\n\t\treturn instance.get(`profile/` + userId)\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n\tgetStatus(userId) {                                                   //Показать профиль выбранного пользователя\r\n\t\treturn instance.get(`profile/status/` + userId)\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n\tupdateStatus(status) {                                                   //Показать профиль выбранного пользователя\r\n\t\treturn instance.put(`profile/status`, { status: status })\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n\taddPhoto(photoFile) {                                                   //Показать профиль выбранного пользователя\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('image', photoFile)\r\n\t\treturn instance.put(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t}\r\n\t\t)\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n\tsaveProfileData(profile) {\r\n\t\treturn instance.put(`profile`, profile)\r\n\t\t\t.then(response => { return response.data })\r\n\t}\r\n}\r\n\r\nexport const authAPI = {\r\n\tgetAuthMe() {                                                             //Войти в соц сеть под своим именем\r\n\t\treturn instance.get(`auth/me`)\r\n\t\t\t.then(response => { return response.data })  //!ПРОМИС .then ПРОЧИТАТЬ КАК ЭТЬО РАБОТАЕТ\r\n\t},\r\n\tlogin(email, password, rememberMe = false, captcha = null) {                               //логинимся в свой профиль                         \r\n\t\treturn instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n\tlogout() {                                                             //Выходим из профиля\r\n\t\treturn instance.delete(`auth/login`)\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n}\r\n\r\nexport const securityAPI = {\r\n\tgetCaptcha() {                                                          //Войти в соц сеть под своим именем\r\n\t\treturn instance.get(`security/get-captcha-url`)\r\n\t\t\t.then(response => { return response.data })\r\n\t},\r\n}\r\n\r\nexport const dialogsAPI = {}\r\n","let SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\nlet ACTIV_DIALOG = 'dialogs/ACTIV_DIALOG';\r\n\r\nlet initialState = {\r\n        dialogsData: [\r\n                { id: 1, name: 'Илья' },\r\n                { id: 2, name: 'Анна' },\r\n                { id: 3, name: 'Алексей' },\r\n                { id: 4, name: 'Егор' },\r\n                { id: 5, name: 'Константин' },\r\n                { id: 5, name: 'Павел' }\r\n        ],\r\n        messagesData: [\r\n                { id: 1, message: 'Привет' },\r\n                { id: 2, message: 'Как дела' },\r\n                { id: 3, message: 'Учу реакт' },\r\n        ],\r\n        activeDialog: '',\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SEND_MESSAGE:\r\n                        return {\r\n                                ...state,\r\n                                messagesData: [...state.messagesData, { id: 5, message: action.messagesData }],\r\n                        }\r\n                case ACTIV_DIALOG:\r\n                        const interlocutor = state.dialogsData.find(item => item.id == action.id)\r\n                        console.log({interlocutor});\r\n                        return {\r\n                                ...state,\r\n                                activeDialog: interlocutor.name\r\n                        } \r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\nexport let addMessageAC = (newMessageBody) => { return { type: SEND_MESSAGE, messagesData: newMessageBody } }\r\nexport let activDialogAC = (id) => { return { type: ACTIV_DIALOG, id } }\r\n\r\nexport default dialogsReducer;\r\n\r\n","import { usersAPI } from '../api/api';\r\n\r\nlet FOLLOW = 'users/FOLLOW';\r\nlet UNFOLLOW = 'users/UNFOLLOW';\r\nlet SET_USERS = 'users/SET_USERS';\r\nlet SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nlet SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT';\r\nlet TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n        usersData: [],\r\n        pagesSize: 50,\r\n        totalCount: 0,\r\n        currentPage: 1,\r\n        isFetching: false,\r\n        followingInProgress: [],\r\n        portionSize: 10,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case FOLLOW:\r\n                        return {\r\n                                ...state,\r\n                                usersData: state.usersData.map(u => {\r\n                                        if (u.id === action.userId) {\r\n                                                return { ...u, follow: true };\r\n                                        }\r\n                                        return u;\r\n                                }),\r\n                        }\r\n                case UNFOLLOW:\r\n                        return {\r\n                                ...state,\r\n                                usersData: state.usersData.map(u => {\r\n                                        if (u.id === action.userId) {\r\n                                                return { ...u, follow: false };\r\n                                        }\r\n                                        return u;\r\n                                }),\r\n                        }\r\n                case SET_USERS:\r\n                        return {\r\n                                ...state, usersData: [...action.users]\r\n                        }\r\n                case SET_CURRENT_PAGE:\r\n                        return {\r\n                                ...state, currentPage: action.currentPage\r\n                        }\r\n                case SET_TOTAL_COUNT:\r\n                        return {\r\n                                ...state, totalCount: action.totalCount\r\n                        }\r\n                case TOGGLE_IS_FETCHING:\r\n                        return {\r\n                                ...state, isFetching: action.isFetching\r\n                        }\r\n                case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n                        return {\r\n                                ...state, followingInProgress: action.isFetching\r\n                                        ? [...state.followingInProgress, action.userId]\r\n                                        : state.followingInProgress.filter(id => id != action.userId)\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//!ActionCreators\r\nexport const follow = (userId) => { return { type: FOLLOW, userId } }\r\nexport const unFollow = (userId) => { return { type: UNFOLLOW, userId } }\r\nexport const setUsers = (users) => { return { type: SET_USERS, users } }\r\nexport const setCurrentPage = (currentPage) => { return { type: SET_CURRENT_PAGE, currentPage } }\r\nexport const setTotalCount = (totalCount) => { return { type: SET_TOTAL_COUNT, totalCount } }\r\nexport const setIsFetching = (isFetching) => { return { type: TOGGLE_IS_FETCHING, isFetching } }\r\nexport const toggleFollowingProgress = (isFetching, userId) => { return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId } }\r\n\r\n//!ThunkCreator\r\nexport const setUsersTC = (currentPage, pagesSize) => async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        const data = await usersAPI.getUsersPage(currentPage, pagesSize)\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalCount(data.totalCount));\r\n}\r\nexport const onPageChangedTC = (pageNumber, pagesSize) => async (dispatch) => {\r\n        dispatch(setCurrentPage(pageNumber));\r\n        dispatch(setIsFetching(true));\r\n        const data = await usersAPI.getUsersPage(pageNumber, pagesSize)\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, metodApi, actionCreator) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        const data = await metodApi(userId)\r\n        if (data.resultCode == 0) {\r\n                dispatch(actionCreator(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n\r\n}\r\nexport const followTC = (id) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.getUsersUnSubscribe.bind(usersAPI), unFollow);\r\n}\r\nexport const unFollowTC = (id) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.getUsersSubscribe.bind(usersAPI), follow);\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n\r\n//! ДО РЕФАКТОРИНГА!\r\n/*export const followTC = (id) => async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, id))\r\n        const data = await usersAPI.getUsersUnSubscribe(id)\r\n        if (data.resultCode == 0) {\r\n                dispatch(unFollow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n}\r\n\r\nexport const unFollowTC = (id) => async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, id))\r\n        const data = await usersAPI.getUsersSubscribe(id)\r\n        if (data.resultCode == 0) {\r\n                dispatch(follow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n} */","import { authAPI, securityAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nlet SET_USER_DATA = 'auth/SEND-MESSAGE';\r\nlet GET_CAPTCHA_URL = 'auth/GET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false,\r\n\tcaptchaURL: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\tcase GET_CAPTCHA_URL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n//!ActionCreators\r\nexport let setAuthUserData = (userId, email, login, isAuth) => { return { type: SET_USER_DATA, payload: { userId, email, login, isAuth } } }\r\nexport let getCaptchaUrlSucsess = (captchaURL) => { return { type: GET_CAPTCHA_URL, payload: {captchaURL} } }\r\n\r\n//!ThunkCreator\r\nexport let setAuthUserDataTC = () => async (dispatch) => {\r\n\tconst data = await authAPI.getAuthMe()\r\n\tif (data.resultCode === 0) {\r\n\t\tlet { id, email, login,} = data.data;\r\n\t\tdispatch(setAuthUserData(id, email, login, true,));\r\n\t}\r\n}\r\n\r\nexport let loginTC = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n\tconst data = await authAPI.login(email, password, rememberMe, captcha)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(setAuthUserDataTC())\r\n\t}\r\n\telse {\r\n\t\tif (data.resultCode === 10) {\r\n\t\t\tdispatch(captchaTC())\r\n\t\t}\r\n\t\tlet messageError = data.messages.length > 0 ? data.messages[0] : 'Ошибка'\r\n\t\tlet action = stopSubmit('login', { _error: messageError });\r\n\t\tdispatch(action)\r\n\t}\r\n}\r\n\r\nexport let logoutTC = () => async (dispatch) => {\r\n\tconst data = await authAPI.logout()\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(setAuthUserData(null, null, null, false))\r\n\t}\r\n}\r\n\r\nexport let captchaTC = () => async (dispatch) => {\r\n\tconst data = await securityAPI.getCaptcha()\r\n\tconst captchaURL = data.url;\t\r\n\tdispatch(getCaptchaUrlSucsess(captchaURL))\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","import { authAPI } from '../api/api';\r\nimport { setAuthUserDataTC } from './auth-reducer'\r\n\r\nlet SET_INITIALAZE = 'app/SET_INITIALAZE';\r\n\r\nlet initialState = {\r\n        initialazed: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case SET_INITIALAZE:\r\n                        return {\r\n                                ...state,\r\n                                initialazed: true,\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}\r\n\r\n//!ActionCreators\r\nexport let setInizialaze = () => { return { type: SET_INITIALAZE } }\r\n\r\n//!ThunkCreator\r\nexport let initialazeAppTC = () => (dispatch) => {\r\n        let promise = dispatch(setAuthUserDataTC())\r\n        Promise.all([promise])\r\n                .then(() => {\r\n                        dispatch(setInizialaze())\r\n                })\r\n}\r\n\r\nexport default appReducer;\r\n\r\n\r\n\r\n/* export let loginTC = (email, password, rememberMe) => {\r\n        return (dispatch) => {\r\n                authAPI.login(email, password, rememberMe).then(data => {\r\n                        if (data.resultCode === 0) {\r\n                                dispatch(setAuthUserDataTC())\r\n                        }\r\n                        else {\r\n                                let messageError = data.messages.length > 0 ? data.messages[0]: 'Ошибка'\r\n                                let action = stopSubmit('login', { _error: messageError });\r\n                                dispatch(action)\r\n                        }\r\n                });\r\n        }\r\n}\r\nexport let logoutTC = () => {\r\n        return (dispatch) => {\r\n                authAPI.logout().then(data => {\r\n                        if (data.resultCode === 0) {\r\n                                dispatch(setAuthUserData(null, null, null, false))\r\n                        }\r\n                });\r\n        }\r\n} */","export default __webpack_public_path__ + \"static/media/logo.a104129a.png\";","import React from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport './Header.css'\r\nimport Logo from './../image/logo.png'\r\n\r\nconst Header = (props) => {\r\n        return (\r\n                <div className='header'>\r\n                        <div className='header-content'>\r\n                                <div className='name-app'>\r\n                                        <img src={Logo} />\r\n                                <div>SpaceCats</div>\r\n                                </div>\r\n                                <div className='login-blok'>\r\n                                        {\r\n                                                props.isAuth\r\n                                                        ? <div className='login-blok-button'>\r\n                                                                <span className='login-blok-button'>{props.login} </span>\r\n                                                                <button onClick={props.logoutTC} className='login-button'> Выйти </button>\r\n                                                        </div>\r\n                                                        : <NavLink to={'/login'} className='login-blok-button'> <button className='login-blok-button'> Login </button> </NavLink>\r\n                                        }\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutTC} from '../Redux/auth-reducer';\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n              \r\n        render () {\r\n                return <Header {...this.props}/>\r\n        }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n})\r\n\r\nexport default connect (mapStateToProps, \r\n        {logoutTC})(HeaderContainer);","import React from 'react';\r\nimport './NavMenu.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst NavMenu = () => {\r\n        return (\r\n                <nav className='nav'>\r\n                        <div className='item'>\r\n                                <NavLink to='/profile' activeClassName='active-link'>Профиль</NavLink>\r\n                        </div>\r\n                        <div className='item'>\r\n                                <NavLink to='/dialogs' activeClassName='active-link'>Сообщения</NavLink>\r\n                        </div>\r\n                        <div className='item'>\r\n                                <NavLink to='/users' activeClassName='active-link'>Друзья</NavLink>\r\n                        </div>\r\n                </nav>\r\n        );\r\n}\r\n\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport './Login.css';\r\nimport { reduxForm } from 'redux-form'\r\nimport { LoginForm } from \"./LoginForm\";\r\nimport { connect } from 'react-redux';\r\nimport { loginTC } from '../Redux/auth-reducer';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToProps = (state) => {\r\n        return {\r\n                isAuth: state.auth.isAuth,\r\n                captchaURL: state.auth.captchaURL,\r\n        }\r\n}\r\n\r\nconst Login = (props) => {\r\n\r\n        const LoginMe = (formData) => {\r\n                props.loginTC(formData.email, formData.password, formData.rememberMe, formData.captcha); // тут loginTC это callback, который внутри себя диспатчит thunkCreator с таким же названием loginTC   \r\n        }\r\n\r\n        if (props.isAuth) { return <Redirect to={'/profile'} /> }\r\n\r\n\r\n        debugger\r\n        return (\r\n                <div className='login-user-window'>\r\n                        <h1>Введите свои данные</h1>\r\n                        <LoginReduxForm onSubmit={LoginMe} captchaURL={props.captchaURL}/>\r\n                </div>\r\n\r\n        )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default connect(mapStateToProps, { loginTC })(Login);","import React from 'react';\r\nimport { createFielfInput } from '../common/formsControls/formsControls';\r\nimport './Login.css';\r\n\r\nexport const LoginForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div className='login-user'>\r\n\t\t\t\t<div className='login-user-item'>\r\n\t\t\t\t\t{createFielfInput('Login','input','email','login-user-input',null)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='login-user-item'>\r\n\t\t\t\t\t{createFielfInput('Password','input','password','login-user-input','password')}\r\n\t\t\t\t</div>\r\n\t\t\t\t{props.error && <div className='login-error'>{props.error}</div>}\r\n\t\t\t\t<div className='login-user-item'>\r\n\t\t\t\t\t{createFielfInput(null,'input','rememberMe',null,'checkbox')}\r\n                    Запомнить меня\r\n                </div>\r\n\t\t\t\t<div className='captcha'>\r\n\t\t\t\t\t{props.captchaURL && <div> <img src={props.captchaURL}/>  {createFielfInput('Введите символы','input','captcha','login-user-input',null)}</div>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='login-user-item'>\r\n\t\t\t\t\t<button>Login</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initialazeAppTC } from './components/Redux/app-reducer';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport NavMenu from './components/NavMenu/NavMenu';\r\nimport Login from './components/Login/Login';\r\nimport Preloader from './components/common/preloader/Preloader';\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.initialazeAppTC()\r\n\t}\r\n\trender() {\r\n\t\tif (!this.props.initialize) {\r\n\t\t\treturn <Preloader />\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"app-wrapper\">\r\n\t\t\t\t<HeaderContainer />\r\n\t\t\t\t<div className='content-page'>\r\n\t\t\t\t\t<NavMenu />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath='/profile/:userId?'\r\n\t\t\t\t\t\trender={() => <Suspense fallback={<Preloader />}> <ProfileContainer /> </Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath='/dialogs'\r\n\t\t\t\t\t\trender={() => <Suspense fallback={<Preloader />}> <DialogsContainer /> </Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath='/users'\r\n\t\t\t\t\t\trender={() => <Suspense fallback={<Preloader />}> <UsersContainer /> </Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route path='/login' component={Login} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ initialize: state.app.initialazed })\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { initialazeAppTC }),\r\n\twithRouter)\r\n\t(App);","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport authReducer from './auth-reducer';\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer';\r\n\r\n\r\nlet redusers = combineReducers (\r\n        {\r\n                profilePage: profileReducer,\r\n                dialogsPage: dialogsReducer,\r\n                usersPage: usersReducer,\r\n                auth: authReducer,\r\n                form: formReducer,\r\n                app: appReducer,\r\n        }\r\n);\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport store from './components/Redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n\t<HashRouter /* basename={process.env.PUBLIC_URL} */> {/* не работает  */}\r\n\t\t<Provider store={store}>\r\n\t\t\t<App store={store} />\r\n\t\t</Provider>\r\n\t</HashRouter>, document.getElementById('root')\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport './formsControls.css'\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\treturn (\r\n\t\t<div className='input-form'>\r\n\t\t\t<input {...input} {...props} />\r\n\t\t\t{meta.touched && meta.error && <span className='error'>{meta.error}'</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const createFielfInput = (placeholder, component, name, className, type) => {\r\n\treturn (\r\n\t\t<Field\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tcomponent={component}\r\n\t\t\tname={name}\r\n\t\t\tclassName={className}\r\n\t\t\ttype={type}\r\n\t\t/>\r\n\t)\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Loading_progress.c16e84ee.gif\";","import React from 'react';\r\nimport './Preloader.css';\r\nimport PreloaderGif from './../../image/Loading_progress.gif';\r\n\r\nlet Preloader = () => {\r\n        return (\r\n                <div className='preloader'>\r\n                         <img src={PreloaderGif}/>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Preloader;","import { stopSubmit } from 'redux-form';\r\nimport { profileAPI } from '../api/api';\r\n\r\nlet ADD_POST = 'profile/ADD-POST';\r\nlet SET_PROFILE_PAGE = 'profile/SET_PROFILE_PAGE';\r\nlet SET_STATUS = 'profile/SET_STATUS';\r\nlet UPDATE_STATUS = 'profile/UPDATE_STATUS';\r\nlet DELETE_POST = 'profile/DELETE_POST';\r\nlet ADD_PHOTO = 'profile/ADD_PHOTO';\r\n\r\nlet initialState = {\r\n\tpostData: [\r\n\t\t{ id: 1, post: 'Это мой первый пост', like: 5 },\r\n\t\t{ id: 2, post: 'Привет, как у вас дела?', like: 2 },\r\n\t\t{ id: 3, post: 'Это мой первый проект на React', like: 10 },\r\n\t],\r\n\tphotoData: [\r\n\t\t{ id: 1, photo: 'https://99px.ru/sstorage/53/2018/11/mid_241496_764968.jpg' },\r\n\t\t{ id: 2, photo: 'https://cs5.pikabu.ru/post_img/big/2015/12/06/11/1449430982115592321.jpg' },\r\n\t\t{ id: 3, photo: 'https://zooblog.ru/wp-content/uploads/2017/03/1421246515_34-1.jpg' },\r\n\t\t{ id: 4, photo: 'https://www.meme-arsenal.com/memes/3b7265bfc0e362ddeebbf529262c01e8.jpg' },\r\n\t\t{ id: 5, photo: 'https://cs5.pikabu.ru/post_img/big/2015/11/17/8/1447765801_80236817.jpg' },\r\n\t\t{ id: 5, photo: 'https://i.pinimg.com/originals/f4/a4/3e/f4a43e9aa6b67992731f9c554714a78d.jpg' },\r\n\t],\r\n\tprofile: null,\r\n\tstatus: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpostData: [...state.postData, { id: 5, post: action.newPostText, like: 25, }],\r\n\t\t\t}\r\n\t\tcase DELETE_POST: //!ДОБАВИТЬ КНОПКУ\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpostData: [...state.postData.filter(p => !p.action.id)]\r\n\t\t\t}\r\n\t\tcase SET_PROFILE_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile,\r\n\t\t\t}\r\n\t\tcase SET_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status,\r\n\t\t\t}\r\n\t\tcase UPDATE_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status,\r\n\t\t\t}\r\n\t\tcase ADD_PHOTO:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: { ...state.profile, photos: action.photos }\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n//нужно подправить нейминг\r\n//!ActionCreators\r\nexport let addPostAC = (newPostText) => { return { type: ADD_POST, newPostText } }\r\nexport let deletePostAC = (id) => { return { type: DELETE_POST, id } }\r\nexport let setProfilePage = (profile) => { return { type: SET_PROFILE_PAGE, profile } }\r\nexport let setUserStatus = (status) => { return { type: SET_STATUS, status } }\r\nexport let setPhoto = (photos) => { return { type: ADD_PHOTO, photos } }\r\n\r\n//!ThunkCreator\r\nexport const setProfilePageTC = (userId) => async (dispatch) => {\r\n\tconst data = await profileAPI.getProfile(userId)\r\n\tdispatch(setProfilePage(data));\r\n}\r\n\r\nexport const getUserStatusTC = (userId) => async (dispatch) => {\r\n\tconst data = await profileAPI.getStatus(userId)\r\n\tdispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateUserStatusTC = (status) => async (dispatch) => {\r\n\tconst data = await profileAPI.updateStatus(status)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(setUserStatus(status));\r\n\t}\r\n}\r\n\r\nexport const saveFotoTC = (photos) => async (dispatch) => {\r\n\tconst data = await profileAPI.addPhoto(photos)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(setPhoto(data.data.photos));\r\n\t}\r\n}\r\n\r\nexport const saveProfileDataTC = (profile) => async (dispatch, getState) => {\r\n\tconst userId = getState().auth.userId;\r\n\tconst data = await profileAPI.saveProfileData(profile)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(setProfilePageTC(userId));\r\n\t}\r\n\telse {\r\n\t\tlet messageError = data.messages.length > 0 ? data.messages[0] : 'Ошибка'\r\n\t\tdispatch(stopSubmit('edit-profile', { _error: messageError }))\r\n\t\treturn Promise.reject(data.messages[0])\r\n\t}\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}