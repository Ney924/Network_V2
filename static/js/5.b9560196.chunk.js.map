{"version":3,"sources":["components/hoc/AuthRedirect.js","components/Users/UsersPageButton.jsx","components/image/no_avatar.png","components/Users/User.jsx","components/Users/Users.jsx","components/Redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","UsersPageButton","pagesCount","Math","ceil","totalCount","pagesSize","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftBorder","rightBorder","className","onClick","disabled","filter","p","map","c","onPageChanged","User","user","usersData","id","photos","small","src","noAvatar","follow","followingInProgress","some","followTC","unFollowTC","name","status","Users","u","getUsers","usersPage","getPagesSize","getTotalCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","getPortionSize","UsersContainer","pageNumber","onPageChangedTC","setUsersTC","Preloader","compose","setUsers","setCurrentPage","setTotalCount","setIsFetching"],"mappings":"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","file":"static/js/5.b9560196.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n        let mapStateRedirect = (state) => {\r\n                return {\r\n                        isAuth: state.auth.isAuth,\r\n                }\r\n        }\r\n        class RedirectComponent extends React.Component {\r\n                render () {\r\n                        if (this.props.isAuth===false) { return <Redirect to={'/login'}/> }\r\n                        return <Component {...this.props}/>\r\n                };\r\n        } ;\r\n        let ConnectAuthRedirectComponent = connect(mapStateRedirect)(RedirectComponent)\r\n        return ConnectAuthRedirectComponent;\r\n}\r\n","import React, { useState } from 'react';\r\nimport './UsersPageButton.css';\r\n\r\nconst UsersPageButton = (props) => {\r\n        let pagesCount = Math.ceil(props.totalCount / props.pagesSize)\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n                pages.push(i);\r\n        }\r\n\r\n        const portionCount = Math.ceil(pagesCount / props.portionSize)\r\n        const [portionNumber, setPortionNumber] = useState(1)\r\n        const leftBorder = (portionNumber - 1) * props.portionSize + 1\r\n        const rightBorder = portionNumber * props.portionSize\r\n\r\n        return (\r\n                <div className='button-page'>\r\n                        <button\r\n                                className='one-button-page next-portion'\r\n                                onClick={() => setPortionNumber(portionNumber - 1)}\r\n                                disabled={portionNumber === 1}\r\n                        >\r\n                                Назад\r\n                        </button>\r\n                        <div className='portion-button'>\r\n                                {pages.filter(p => p >= leftBorder && p <= rightBorder).map(c => {\r\n                                        return (\r\n                                                <button\r\n                                                        className='one-button-page'\r\n                                                        onClick={() => props.onPageChanged(c)}>\r\n                                                        {c}\r\n                                                </button>\r\n                                        )\r\n                                })}\r\n                        </div>\r\n                        <button\r\n                                className='one-button-page next-portion'\r\n                                onClick={() => setPortionNumber(portionNumber + 1)}\r\n                                disabled={portionNumber === portionCount}\r\n                        >\r\n                                Следующие\r\n                        </button>\r\n                </div>)\r\n}\r\n\r\nexport default UsersPageButton;","export default __webpack_public_path__ + \"static/media/no_avatar.f29f0889.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport noAvatar from '../image/no_avatar.png';\r\n\r\n\r\nlet User = (props) => {\r\n        let user = props.usersData;\r\n        return (\r\n                <div className='users' key={user.id}>\r\n                        <div className='users-avatar'>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                        <div> {user.photos.small == null ? <img src={noAvatar} /> : <img src={user.photos.small} />} </div>\r\n                                </NavLink>\r\n                                <div className='users-follow-button'>\r\n                                        {user.follow\r\n                                                ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                                        onClick={() => { props.followTC(user.id) }}>Отписаться</button>\r\n                                                : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                                        onClick={() => { props.unFollowTC(user.id) }}>Подписаться</button>\r\n                                        }\r\n                                </div>\r\n                        </div>\r\n                        <div className='users-name'>\r\n                                <div>{user.name}</div>\r\n                                <div className='status'>{user.status}</div>\r\n                        </div>\r\n                        <div className='users-locaton'>\r\n                                <div>{'u.location.country'}</div>\r\n                                <div>{'u.location.city'}</div>\r\n                        </div>\r\n                </div>\r\n        )\r\n}\r\n       \r\nexport default User","import React from 'react';\r\nimport './Users.css';\r\nimport UsersPageButton from './UsersPageButton';\r\nimport User from './User';\r\n\r\nlet Users = (props) => {\r\n        return (\r\n                <div className='users-page'>\r\n                        <UsersPageButton\r\n                                totalCount={props.totalCount}\r\n                                pagesSize={props.pagesSize}\r\n                                onPageChanged={props.onPageChanged}\r\n                                portionSize={props.portionSize}\r\n                        />\r\n                       {props.usersData.map(u => <User\r\n                                key={u.id}\r\n                                followingInProgress={props.followingInProgress}\r\n                                unFollowTC={props.unFollowTC}\r\n                                followTC={props.followTC}\r\n                                usersData={u}\r\n                        />)}\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Users\r\n\r\n\r\n\r\n/* let Users = (props) => {\r\ndebugger\r\n        return (\r\n                <div className='users-page'>\r\n                        <UsersPageButton\r\n                                totalCount={props.totalCount}\r\n                                pagesSize={props.pagesSize}\r\n                                onPageChanged={props.onPageChanged}\r\n                        />\r\n                        {props.usersData.map(u =>\r\n                                <div className='users' key={u.id}>\r\n                                        <div className='users-avatar'>\r\n                                                <NavLink to={'/profile/' + u.id}>\r\n                                                        <div> {u.photos.small == null ?\r\n                                                                <img src={noAvatar} /> :\r\n                                                                <img src={u.photos.small} />\r\n                                                        }\r\n                                                        </div>\r\n                                                </NavLink>\r\n                                                <div className='users-follow-button'>\r\n                                                        {u.follow\r\n                                                                ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                                        onClick={() => { props.followTC(u.id) }}>Отписаться</button>\r\n                                                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                                        onClick={() => { props.unFollowTC(u.id) }}>Подписаться</button>\r\n                                                        }\r\n                                                </div>\r\n                                        </div>\r\n                                        <div className='users-name'>\r\n                                                <div>{u.name}</div>\r\n                                                <div className='status'>{u.status}</div>\r\n                                        </div>\r\n                                        <div className='users-locaton'>\r\n                                                <div>{'u.location.country'}</div>\r\n                                                <div>{'u.location.city'}</div>\r\n                                        </div>\r\n                                </div>\r\n                        )\r\n                        }\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Users  */\r\n\r\n","export const getUsers = (state) => {\r\n        return state.usersPage.usersData;\r\n}\r\nexport const getPagesSize = (state) => {\r\n        return state.usersPage.pagesSize;\r\n}\r\nexport const getTotalCount = (state) => {\r\n        return state.usersPage.totalCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n        return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n        return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n        return state.usersPage.followingInProgress;\r\n}\r\nexport const getPortionSize = (state) => {\r\n        return state.usersPage.portionSize;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setUsers, setCurrentPage, setTotalCount, setIsFetching, setUsersTC,onPageChangedTC, followTC, unFollowTC} from '../Redux/users-reducer';\r\nimport Users from \"./Users\";\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getPagesSize, getUsers, getTotalCount, getCurrentPage, getIsFetching, getPortionSize, getFollowingInProgress } from '../Redux/users-selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n        componentDidMount() {this.props.setUsersTC(this.props.currentPage, this.props.pagesSize)} \r\n        \r\n        onPageChanged = (pageNumber) => {this.props.onPageChangedTC(pageNumber, this.props.pagesSize)}\r\n        \r\n        render () {     \r\n                return (\r\n                        <>\r\n                                {this.props.isFetching ? <Preloader/> : null}\r\n                                <Users\r\n                                        totalCount={this.props.totalCount}\r\n                                        pagesSize={this.props.pagesSize}\r\n                                        onPageChanged={this.onPageChanged}\r\n                                        usersData={this.props.usersData}\r\n                                        followingInProgress={this.props.followingInProgress}\r\n                                        followTC={this.props.followTC}\r\n                                        unFollowTC={this.props.unFollowTC}\r\n                                        portionSize={this.props.portionSize}\r\n                                />\r\n                        </>\r\n                )}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n        return {\r\n                usersData: getUsers(state),\r\n                pagesSize: getPagesSize(state),\r\n                totalCount: getTotalCount(state),\r\n                currentPage: getCurrentPage(state),\r\n                isFetching: getIsFetching(state),\r\n                portionSize: getPortionSize(state),\r\n                followingInProgress: getFollowingInProgress(state),\r\n        }\r\n}\r\n\r\nexport default compose (connect(\r\n        mapStateToProps, \r\n        {setUsers,setCurrentPage, setTotalCount, setIsFetching, setUsersTC, onPageChangedTC, followTC, unFollowTC}),\r\n         withAuthRedirect)(UsersContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n         /* let isAuthRedirectComponent = withAuthRedirect(UsersContainer)\r\n\r\nexport default connect (mapStateToProps, \r\n        {setUsers, \r\n                setCurrentPage, setTotalCount, setIsFetching, \r\n                setUsersTC, onPageChangedTC, followTC, unFollowTC\r\n        }) \r\n        (isAuthRedirectComponent) */\r\n\r\n    \r\n//! Диспатчи, записаные по старому (может пригодится)\r\n/*1 let mapDispatchToProps = (dispatch) => {\r\n        return {\r\n                follow: (userId) => {\r\n                        dispatch(followAC(userId));\r\n                },\r\n                unFollow: (userId) => {\r\n                        dispatch(unFollowAC(userId));\r\n                },\r\n                setUsers: (usersData) => {\r\n                        dispatch(setUsersAC(usersData));\r\n                },\r\n                setCurrentPage: (pageNumber) => {\r\n                        dispatch(setCurrentPageAC(pageNumber));\r\n                },\r\n                setTotalCount: (totalCount) => {\r\n                        dispatch(setTotalCountAC(totalCount));\r\n                },\r\n                setIsFetching: (isFetching) => {\r\n                        dispatch(setIsFetchingAC(isFetching));\r\n                },\r\n        };\r\n} */\r\n\r\n /* axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pagesSize}`, {withCredentials: true}) */\r\n /* axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pagesSize}`, {withCredentials: true}) */"],"sourceRoot":""}