{"version":3,"sources":["components/hoc/AuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/validators/validator.js","components/image/no_avatar.png","components/Profile/MyPhotos/OnePhoto/OnePhoto.jsx","components/Profile/MyPhotos/MyPhotos.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfifeInfo/ProfileStatus/ProfileStatus.js","components/Profile/ProfifeInfo/ProfileDataUsers/ProfileDataUsers.jsx","components/Profile/ProfifeInfo/ProfileDataUsersForm/ContactsForm.jsx","components/Profile/ProfifeInfo/ProfileDataUsersForm/ProfileDataUsersForm.jsx","components/Profile/ProfifeInfo/ProfifeInfo.jsx","components/Profile/ProfilePanel/ProfilePanel.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","required","className","maxLenghtCreator","maxlenght","PhotosItem","src","photo","MyPhotos","PhotosElement","photoData","map","id","Post","message","like","maxLenght100","MyPosts","memo","postsElemetnts","profilePage","postData","post","MyPostsReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","placeholder","component","Input","name","validate","MyPostsContainer","dispatch","addPostAC","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onClick","updateUserStatusTC","ProfileDataUsers","Contacts","contacsTitle","contactsValue","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","keys","contacts","key","ContactsForm","createFielfInput","ProfileDataUsersFormContainer","error","ProfifeInfo","Preloader","photos","large","Avatar","initialValues","GoToEditMode","FormData","saveProfileDataTC","then","isOwner","type","target","files","saveFotoTC","for","ProfileStatus","ProfilePanel","setTabPost","setTabPhoto","Profile","tab","setTab","ProfilePage","ProfileContainer","userId","match","params","authorizedMyId","histoty","setProfilePageTC","getUserStatusTC","updateProfile","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.c3956661.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n        let mapStateRedirect = (state) => {\r\n                return {\r\n                        isAuth: state.auth.isAuth,\r\n                }\r\n        }\r\n        class RedirectComponent extends React.Component {\r\n                render () {\r\n                        if (this.props.isAuth===false) { return <Redirect to={'/login'}/> }\r\n                        return <Component {...this.props}/>\r\n                };\r\n        } ;\r\n        let ConnectAuthRedirectComponent = connect(mapStateRedirect)(RedirectComponent)\r\n        return ConnectAuthRedirectComponent;\r\n}\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import './validator.css'\r\n\r\nexport const required = (value) => {\r\n\tif (value) return undefined;\r\n\treturn (\r\n\t\t<div className='required'>\r\n\t\t\tПоле обязательное для заполнения !!!\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport const maxLenghtCreator = (maxlenght) => (value) => {\r\n\tif (value.length > maxlenght) return (\r\n\t\t<div className='required'>\r\n\t\t\tМаксимальная длина поста {maxlenght} символов !!!\r\n\t\t</div>\r\n\t);\r\n\treturn undefined;\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/no_avatar.f29f0889.png\";","import React from 'react';\r\n\r\nconst PhotosItem = (props) => {\r\n\treturn (\r\n\t\t<div className='one-photo'> <img src={props.photo}/> </div>\r\n\t)\r\n}\r\n\r\nexport default PhotosItem;","import React from 'react';\r\nimport './MyPhotos.css';\r\nimport PhotosItem from './OnePhoto/OnePhoto';\r\n\r\nconst MyPhotos = (props) => {\r\n\tconst PhotosElement = props.photoData.map((i) => <PhotosItem key={i.id} photo={i.photo}/>)\r\n\treturn (\r\n\t\t<div className='my-photos-container'>\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Фотографии</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className='my-photos'>\r\n\t\t\t\t{PhotosElement}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyPhotos;","import React from 'react';\r\nimport './Post.css'\r\n\r\n\r\nconst Post = (props) => {\r\n        return (\r\n                <div className='post'>\r\n                        <div className='avatar'>\r\n                                <img src='https://i.pinimg.com/originals/4d/af/2f/4daf2f183af331a8ba9a12bc2a458486.jpg' />\r\n                                <span className='post-message'>{props.message}</span>\r\n                                <div className='like'>like {props.like}\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Posts/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLenghtCreator } from \"./../../../utils/validators/validator\";\r\nimport { Input } from \"./../../common/formsControls/formsControls\";\r\n\r\n\r\nconst maxLenght100 = maxLenghtCreator(100)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n        let postsElemetnts = props.profilePage.postData.map((post) => <Post message={post.post} like={post.like} />)\r\n\r\n        let onAddPost = (values) => {\r\n                props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n                <div className='posts'>\r\n                        <div>\r\n                                <h3>Мои посты</h3>\r\n                        </div>\r\n                        <MyPostsReduxForm onSubmit={onAddPost} />\r\n                        {postsElemetnts}\r\n                </div>\r\n        );\r\n})\r\n\r\nexport default MyPosts;\r\n\r\n\r\nconst MyPostsForm = (props) => {\r\n        return (\r\n                <form onSubmit={props.handleSubmit} className='input-post'>\r\n                        <Field\r\n                                placeholder='Написать...'\r\n                                component={Input}\r\n                                name='newPostText'\r\n                                validate={[required, maxLenght100]}\r\n                        />\r\n                        <button>Добавить</button>\r\n                </form>\r\n        )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: 'addPostForm' })(MyPostsForm)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostAC} from '../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofilePage: state.profilePage,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => { dispatch(addPostAC(newPostText)) },\r\n\t}\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n//! Для справки из старых уроков\r\n/* const MyPostsContainer = (props) => {\r\n\r\n  let state = props.store.getState().profilePage;\r\n\r\n  let addPost = ()=> {\r\n\tprops.store.dispatch(addPostActionCreator());\r\n  }\r\n\r\n  let onPostChange = (text) => {\r\n\tprops.store.dispatch(onPostChangeActionCreator(text));\r\n  }\r\n\r\n  return <MyPosts\r\n\taddPost={addPost}\r\n\tupdateNewPostText={onPostChange}\r\n\tpostData={state.postData}\r\n\tnewPostText={state.newPostText}\r\n\t/>\r\n\r\n} */\r\n\r\n/* updateNewPostText: (text) => {dispatch(onPostChangeActionCreator(text));} */","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusHook = (props) => {\r\n        const [editMode, setEditMode] = useState(false);\r\n        const [status, setStatus] = useState(props.status);\r\n\r\n        useEffect(() => {\r\n                setStatus(props.status)\r\n        }, [props.status])\r\n\r\n        const activateEditMode = () => {\r\n                setEditMode(true);\r\n        }\r\n\r\n        const deactivateEditMode = () => {\r\n                props.updateUserStatusTC(status)\r\n                setEditMode(false);\r\n        }\r\n\r\n        const onStatusChange = (e) => {\r\n                setStatus(e.currentTarget.value)\r\n        }\r\n\r\n        return (\r\n                <div className='profile-status'>\r\n                        {editMode === false\r\n                                ? <div\r\n                                        className='profile-status-now'\r\n                                        onDoubleClick={activateEditMode}>\r\n                                        {status || 'No status'}\r\n                                </div>\r\n                                : <div className='profile-status-change'>\r\n                                        <input\r\n                                                onChange={onStatusChange}\r\n                                                value={status}\r\n                                                autoFocus={true}\r\n                                        />\r\n                                        <button onClick={deactivateEditMode}>Сохранить</button>\r\n                                </div>\r\n                        }\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusHook;\r\n","import React from 'react';\r\nimport '../ProfileDataUsers/ProfileDataUsers.css';\r\n\r\nconst ProfileDataUsers = (props) => {\r\n\r\n\tconst Contacts = ({ contacsTitle, contactsValue }) => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<b>{contacsTitle}:</b>  {contactsValue}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='profile-info-container'>\r\n\t\t\t<div className='profile-info'>\r\n\t\t\t\t<div className='profile-info-name'>{props.profile.fullName}</div>\r\n\t\t\t\t<div className='profile-info-item'>28 лет</div>\r\n\t\t\t\t<div className='profile-info-item'>мужчина</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='profile-contacts'>\r\n\t\t\t\t<div className='profile-info-item-data'> <b>Ищу работу? </b> {props.profile.lookingForAJob ? 'да' : 'нет'}</div>\r\n\t\t\t\t<div className='profile-info-item-data'> <b>Мои умения и навыки: </b> {props.profile.lookingForAJobDescription}</div>\r\n\t\t\t\t<div className='profile-info-item-data'> <b>Обо мне:</b> {props.profile.aboutMe}</div>\r\n\t\t\t\t<div className='profile-info-item-contacts'>{Object.keys(props.profile.contacts).map(key => {\r\n\t\t\t\t\treturn <Contacts key={key} contacsTitle={key} contactsValue={props.profile.contacts[key]} />\r\n\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileDataUsers;","import React from 'react';\r\nimport { createFielfInput, Input } from '../../../common/formsControls/formsControls';\r\n\r\nconst ContactsForm = ({ contacsTitle }) => {\r\n        return (\r\n                <div className='item'>\r\n                        <div>{contacsTitle}:</div>\r\n                        <div>\r\n                                {createFielfInput(contacsTitle, Input, 'contacts.' + contacsTitle, null, null)}\r\n                        </div>\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default ContactsForm;","import React from 'react';\r\nimport { createFielfInput, Input } from '../../../common/formsControls/formsControls';\r\nimport { reduxForm } from 'redux-form'\r\nimport './ProfileDataUsersForm.css'\r\nimport ContactsForm from './ContactsForm';\r\n\r\nconst ProfileDataUsersForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\r\n\t\t\t<div >\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\tИмя полтзователя:\r\n\t\t\t\t\t\t{createFielfInput('Имя', Input, 'fullName', null, null)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\tВ поиске работы?\r\n\t\t\t\t\t\t{createFielfInput('В поиске работы?', 'input', 'lookingForAJob', null, 'checkbox')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\tМои умения и навыки:\r\n\t\t\t\t\t\t{createFielfInput('В поиске работы?', Input, 'lookingForAJobDescription', null, 'null')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\tОбо мне:\r\n\t\t\t\t\t\t{createFielfInput('Обо мне', Input, 'aboutMe', null, 'null')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div> {Object.keys(props.profile.contacts).map(key => {\r\n\t\t\t\t\t\treturn <ContactsForm key={key} contacsTitle={key} />\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<button className='profile-info-button' >Сохранить</button>\r\n\t\t\t\t{props.error && <div className='profile-data-error'>{props.error}</div>}\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst ProfileDataUsersFormContainer = reduxForm({ form: 'edit-profile' })(ProfileDataUsersForm)\r\n\r\nexport default ProfileDataUsersFormContainer;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport './ProfifeInfo.css';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport Avatar from './../../image/no_avatar.png';\r\nimport ProfileDataUsers from './ProfileDataUsers/ProfileDataUsers';\r\nimport ProfileDataUsersForm from './ProfileDataUsersForm/ProfileDataUsersForm';\r\n\r\nconst ProfifeInfo = (props) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\r\n\tconst addPhoto = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tprops.saveFotoTC(e.target.files[0])\r\n\t\t}\r\n\t}\r\n\r\n\tconst GoToEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\t}\r\n\r\n\tconst onSubmit = (FormData) => {\r\n\t\tprops.saveProfileDataTC(FormData).then(() => setEditMode(false));\r\n\t}\r\n\r\n\treturn (\r\n\t\tprops.profile == null ?\r\n\t\t\t<Preloader /> :\r\n\t\t\t<div className='profile'>\r\n\t\t\t\t<div className='description'>\r\n\t\t\t\t\t<img className='ava' src={props.profile.photos.large == null || undefined ? Avatar : props.profile.photos.large} />\r\n\t\t\t\t\t{!editMode\r\n\t\t\t\t\t\t? <ProfileDataUsers profile={props.profile} />\r\n\t\t\t\t\t\t: <ProfileDataUsersForm\r\n\t\t\t\t\t\t\tinitialValues={props.profile}\r\n\t\t\t\t\t\t\tprofile={props.profile}\r\n\t\t\t\t\t\t\tGoToEditMode={GoToEditMode}\r\n\t\t\t\t\t\t\tonSubmit={onSubmit} />}\r\n\t\t\t\t\t<div className='photos-profile'>\r\n\t\t\t\t\t\t{props.isOwner && <input\r\n\t\t\t\t\t\t\ttype={'file'}\r\n\t\t\t\t\t\t\tid='file'\r\n\t\t\t\t\t\t\tonChange={addPhoto} />}              \t\t\t\t{/*чтобы привязать label к input мы задаём for по id, которыйзадан input-у*/}\r\n\t\t\t\t\t\t<label for='file'>Добавить аватар</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{props.isOwner && !editMode && <button\r\n\t\t\t\t\t\tclassName='profile-info-button'\r\n\t\t\t\t\t\tonClick={() => setEditMode(true)}>\r\n\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t</button>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<ProfileStatus\r\n\t\t\t\t\tstatus={props.status}\r\n\t\t\t\t\tupdateUserStatusTC={props.updateUserStatusTC} />\r\n\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProfifeInfo;","import React from 'react';\r\nimport './ProfilePanel.css'\r\n\r\nconst ProfilePanel = (props) => {\r\n        return (\r\n                <div className='profile-panel'>\r\n                        <button onClick={props.setTabPost}>\r\n                                Посты\r\n                        </button>\r\n                        <button>\r\n                                Подписки\r\n                        </button>\r\n                        <button onClick={props.setTabPhoto}>\r\n                                Мои фотографии\r\n                        </button>\r\n                        <button className='right-button'>\r\n                                Обо мне\r\n                        </button>\r\n                </div>\r\n        )\r\n}\r\nexport default ProfilePanel;","import React, { useState } from 'react';\r\nimport MyPhotos from './MyPhotos/MyPhotos';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfifeInfo from './ProfifeInfo/ProfifeInfo';\r\nimport './Profile.css'\r\nimport ProfilePanel from './ProfilePanel/ProfilePanel';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\tconst [tab, setTab] = useState(1)\r\n\tconst setTabPost = () => {setTab(1)}\r\n\tconst setTabPhoto = () => {setTab(0)}\r\n\r\n\tconst ProfilePage = () => {\r\n\t\treturn (\r\n\t\t\t<div className='profile-page'>\r\n\t\t\t\t<ProfifeInfo\r\n\t\t\t\t\tprofile={props.profile}\r\n\t\t\t\t\tstatus={props.status}\r\n\t\t\t\t\tupdateUserStatusTC={props.updateUserStatusTC}\r\n\t\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\t\tsaveFotoTC={props.saveFotoTC}\r\n                                        saveProfileDataTC={props.saveProfileDataTC}\r\n\t\t\t\t/>\r\n\t\t\t\t<ProfilePanel setTabPost={setTabPost} setTabPhoto={setTabPhoto} />\r\n\t\t\t\t{tab == 1 ? <MyPostsContainer /> : <MyPhotos photoData={props.photoData}/>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ProfilePage />\r\n\t);\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setProfilePageTC, getUserStatusTC, updateUserStatusTC, saveFotoTC, saveProfileDataTC } from '../Redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\tupdateProfile() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (userId == undefined) {\r\n\t\t\tuserId = this.props.authorizedMyId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.histoty.push('/login');  //заглушка с редиректом через метод history.push\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.setProfilePageTC(userId, this.props.profile);\r\n\t\tthis.props.getUserStatusTC(userId);\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateProfile();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (this.props.match.params.userId != prevProps.match.params.userId) {\r\n\t\t\tthis.updateProfile();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n                return (\r\n\t\t\t<Profile {...this.props}\r\n\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\tstatus={this.props.status}\r\n\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\tsaveFotoTC={this.props.saveFotoTC}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tauthorizedMyId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth,\r\n                photoData: state.profilePage.photoData,\r\n\t}\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,\r\n\t{ setProfilePageTC, getUserStatusTC, updateUserStatusTC, saveFotoTC, saveProfileDataTC }),\r\n\twithRouter,\r\n\twithAuthRedirect)\r\n\t(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* let isAuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDateProfileContainer= withRouter(isAuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps,\r\n\t\t\t{setProfilePageTC} )\r\n\t\t\t(WithUrlDateProfileContainer);\r\n */\r\n\r\n/* axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId) */"],"sourceRoot":""}