{"version":3,"sources":["components/hoc/AuthRedirect.js","utils/validators/validator.js","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/DialogueWithTheUser/DialogueWithTheUser.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","required","value","maxLenghtCreator","maxlenght","length","DialogsItem","Path","id","className","onClick","activDialogAC","name","MessageItem","message","DialogueWithTheUser","activeDialog","maxLenght150","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","Dialogs","dialogsElemets","dialogsPage","dialogsData","map","d","messageElements","messagesData","m","values","addMessage","newMessageBody","isAuthRedirectComponent","DialogsContainer","dispatch","addMessageAC"],"mappings":"8NAKaA,EAAmB,SAACC,GACzB,IAKMC,EANiC,4JAO/B,WACQ,OAAwB,IAApBC,KAAKC,MAAMC,OAAyB,cAAC,IAAD,CAAUC,GAAI,WAC/C,cAACL,EAAD,eAAeE,KAAKC,YATJ,GAMPG,IAAMN,WAOtC,OADmCO,aAXZ,SAACC,GAChB,MAAO,CACCJ,OAAQI,EAAMC,KAAKL,UASAG,CAA0BN,K,iCCjBrE,oEAAO,IAAMS,EAAW,SAACC,GACjB,IAAIA,EACJ,MAAO,2LAGFC,EAAmB,SAACC,GAAD,OAAe,SAACF,GACxC,GAAIA,EAAMG,OAASD,EAAW,MAAM,0IAAN,OAAmCA,EAAnC,6D,wKCcvBE,EAhBK,SAACZ,GAEb,IAAMa,EAAO,YAAcb,EAAMc,GAMjC,OACQ,qBAAKC,UAAU,eAAf,SACQ,eAAC,IAAD,CAASb,GAAIW,EAAMG,QANd,WACbhB,EAAMiB,cAAcjB,EAAMc,KAKlB,cAA4Cd,EAAMkB,KAAlD,UCDTC,G,OAVK,SAACnB,GACb,OACQ,qBAAKe,UAAU,WAAf,SACQ,sBAAMA,UAAU,eAAhB,SAAgCf,EAAMoB,c,kCCS/CC,G,OAZa,SAACrB,GACrB,OACQ,sBAAKe,UAAU,iBAAf,UACQ,qBAAKA,UAAU,sBAAf,SACSf,EAAMsB,cAAgB,iEAE/B,qBAAKP,UAAU,wBAAf,yBCClBQ,EAAed,YAAiB,KA4ChCe,EAAmBC,YAAU,CAAEC,KAAM,kBAAlBD,EAfL,SAACzB,GACpB,OACC,uBAAMe,UAAU,cAAcY,SAAU3B,EAAM4B,aAA9C,UACC,cAACC,EAAA,EAAD,CACCC,YAAY,oGACZC,UAAWC,IACXd,KAAM,iBACNe,SAAU,CAAC1B,IAAUgB,GACrBR,UAAU,sBAEX,wBAAQA,UAAU,qBAAlB,0EAOYmB,EA5CC,SAAClC,GAChB,IAAImC,EAAiBnC,EAAMoC,YAAYC,YAAYC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAarB,KAAMqB,EAAErB,KAAMJ,GAAIyB,EAAEzB,GAAIG,cAAejB,EAAMiB,mBACpHuB,EAAkBxC,EAAMoC,YAAYK,aAAaH,KAAI,SAACI,GAAD,OAAO,cAAC,EAAD,CAAa5B,GAAI4B,EAAE5B,GAAIM,QAASsB,EAAEtB,aAIlG,OACC,sBAAKL,UAAU,oBAAf,UACC,qBAAKA,UAAU,yBAAf,SACC,cAAC,EAAD,CAAqBO,aAActB,EAAMoC,YAAYd,iBAEtD,sBAAKP,UAAU,UAAf,UAEC,qBAAKA,UAAU,gBAAf,SACC,qBAAKA,UAAU,sBAAf,SACEyB,MAGH,qBAAKzB,UAAU,eAAf,SACEoB,OAGH,cAACX,EAAD,CAAkBG,SAnBE,SAACgB,GACtB3C,EAAM4C,WAAWD,EAAOE,uB,0BCOtBC,EAA0BlD,YAAiBsC,GAE3Ca,EAAmB3C,aAlBD,SAACC,GACf,MAAO,CACC+B,YAAa/B,EAAM+B,YACnBnC,OAAQI,EAAMC,KAAKL,WAIV,SAAC+C,GAClB,MAAO,CACCJ,WAAY,SAACC,GAAoBG,EAASC,YAAaJ,KACvD5B,cAAe,SAACH,GAAQkC,EAAS/B,YAAcH,QAQxCV,CAA6C0C,GAErDC","file":"static/js/4.65e7338b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n        let mapStateRedirect = (state) => {\r\n                return {\r\n                        isAuth: state.auth.isAuth,\r\n                }\r\n        }\r\n        class RedirectComponent extends React.Component {\r\n                render () {\r\n                        if (this.props.isAuth===false) { return <Redirect to={'/login'}/> }\r\n                        return <Component {...this.props}/>\r\n                };\r\n        } ;\r\n        let ConnectAuthRedirectComponent = connect(mapStateRedirect)(RedirectComponent)\r\n        return ConnectAuthRedirectComponent;\r\n}\r\n","export const required = (value) => {\r\n        if (value) return undefined;\r\n        return \"Поле обязательное для заполнения !!!!!\"     ; \r\n}\r\n\r\nexport const maxLenghtCreator = (maxlenght) => (value) => {\r\n        if (value.length > maxlenght) return `Максимальная длина поста ${maxlenght} символов !!!!`;\r\n        return undefined; \r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './DialogsItem.css';\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n        const Path = '/dialogs/' + props.id;\r\n\r\n        const dialogueWith = () => {\r\n                props.activDialogAC(props.id)\r\n        }\r\n\r\n        return (\r\n                <div className='dialigs-item'>\r\n                        <NavLink to={Path} onClick={dialogueWith}> {props.name} </NavLink>\r\n                </div>\r\n        )\r\n}\r\n\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport './MessageItem.css';\r\n\r\nconst MessageItem = (props) => {\r\n        return (\r\n                <div className='messages'>\r\n                        <span className='message-item'>{props.message}</span>\r\n                </div>\r\n               \r\n                \r\n        )\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport './DialogueWithTheUser.css';\r\n\r\nconst DialogueWithTheUser = (props) => {\r\n        return (\r\n                <div className='dialogs-header'>\r\n                        <div className='dialogs-header-user'>\r\n                                {props.activeDialog || 'Собеседник'}\r\n                       </div>\r\n                        <div className='dialogs-header-online'>\r\n                                Online\r\n                        </div>\r\n                </div>\r\n        )\r\n}\r\nexport default DialogueWithTheUser;","import React from 'react';\r\nimport './Dialogs.css';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLenghtCreator } from \"./../../utils/validators/validator\";\r\nimport { Input } from '../common/formsControls/formsControls';\r\nimport DialogueWithTheUser from './DialogueWithTheUser/DialogueWithTheUser';\r\n\r\n\r\nconst maxLenght150 = maxLenghtCreator(150)\r\n\r\nconst Dialogs = (props) => {\r\n\tlet dialogsElemets = props.dialogsPage.dialogsData.map((d) => <DialogsItem name={d.name} id={d.id} activDialogAC={props.activDialogAC} />)\r\n\tlet messageElements = props.dialogsPage.messagesData.map((m) => <MessageItem id={m.id} message={m.message} />)\r\n\tconst addNewMessage = (values) => {\r\n\t\tprops.addMessage(values.newMessageBody)\r\n\t}\r\n\treturn (\r\n\t\t<div className='dialogs-container'>\r\n\t\t\t<div className='dialogue-with-the-user'>\r\n\t\t\t\t<DialogueWithTheUser activeDialog={props.dialogsPage.activeDialog} />\r\n\t\t\t</div>\r\n\t\t\t<div className='dialogs'>\r\n\r\n\t\t\t\t<div className='message-block'>\r\n\t\t\t\t\t<div className='message-items-block'>\r\n\t\t\t\t\t\t{messageElements}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='dialog-items'>\r\n\t\t\t\t\t{dialogsElemets}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<MessageReduxForm onSubmit={addNewMessage} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst MessageForm = (props) => {\r\n\treturn (\r\n\t\t<form className='add-message' onSubmit={props.handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\tplaceholder='Введите сообщение'\r\n\t\t\t\tcomponent={Input}\r\n\t\t\t\tname={'newMessageBody'}\r\n\t\t\t\tvalidate={[required, maxLenght150]}\r\n\t\t\t\tclassName='add-message-input'\r\n\t\t\t/>\r\n\t\t\t<button className='add-message-button'>Отправить</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({ form: 'addMessageForm' })(MessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n/*  return (\r\n\t\t\t\t<div className='dialogs'>\r\n\t\t\t\t\t   <div className='dialog-items'>\r\n\t\t\t\t\t\t\t   {dialogsElemets}\r\n\t\t\t\t\t   </div>\r\n\r\n\t\t\t\t\t\t<div className='message-block'>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{messageElements}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='add-message'>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Введите сообщение'\r\n\t\t\t\t\t\t\t\t\t\t\t\tref={newMessageElement}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onMessageChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.newMessageText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={onAddMessage}>Отправить</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t); */","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport {addMessageAC, activDialogAC} from \"../Redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\r\n//import { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n        return {\r\n                dialogsPage: state.dialogsPage,\r\n                isAuth: state.auth.isAuth,\r\n        }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n        return {\r\n                addMessage: (newMessageBody) => {dispatch(addMessageAC(newMessageBody))},\r\n                activDialogAC: (id) => {dispatch(activDialogAC(id))},\r\n        }\r\n}\r\n\r\n//export default compose()()\r\n\r\nlet isAuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(isAuthRedirectComponent)\r\n\r\nexport default DialogsContainer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n//!Всякое стаарое\r\n/* const DialogsContainer = (props) => {\r\n        let state = props.store.getState().dialogsPage;\r\n        \r\n        let addMessage = () => {\r\n                props.store.dispatch(addMessageAtionCreator());\r\n        }\r\n        \r\n        let onMessageChange = (text) => {\r\n                props.store.dispatch(onMessageChangeActionCreator(text));\r\n        }\r\n\r\n        return <Dialogs \r\n                addMessage={addMessage}\r\n                updateNewMessageText={onMessageChange}\r\n                messagesData={state.messagesData}\r\n                newMessageText={state.newMessageText}\r\n                dialogsData={state.dialogsData}\r\n        />\r\n} */\r\n /* updateNewMessageText: (text) => {dispatch(onMessageChangeActionCreator(text))} */"],"sourceRoot":""}